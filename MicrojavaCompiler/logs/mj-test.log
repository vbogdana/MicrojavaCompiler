INFO  04:03:09,033 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test00.mj
INFO  04:03:09,044 - #1 program
INFO  04:03:09,045 - #14 MJProgram
INFO  04:03:09,045 - #14 int
INFO  04:03:09,045 - #14 x
INFO  04:03:09,046 - #36 ,
INFO  04:03:09,046 - #14 y
INFO  04:03:09,046 - #35 ;
INFO  04:03:09,046 - #42 {
INFO  04:03:09,046 - #11 void
INFO  04:03:09,047 - #14 main
INFO  04:03:09,047 - #38 (
INFO  04:03:09,047 - #39 )
INFO  04:03:09,047 - #42 {
INFO  04:03:09,048 - #43 }
INFO  04:03:09,048 - #43 }
INFO  04:03:09,048 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test01.mj
INFO  04:03:09,049 - #1 program
INFO  04:03:09,049 - #14 Prilepi
INFO  04:03:09,049 - #14 int
INFO  04:03:09,049 - #14 a
INFO  04:03:09,050 - #36 ,
INFO  04:03:09,050 - #14 b
INFO  04:03:09,050 - #35 ;
INFO  04:03:09,050 - #14 int
INFO  04:03:09,050 - #14 manji
INFO  04:03:09,050 - #36 ,
INFO  04:03:09,050 - #14 veci
INFO  04:03:09,051 - #36 ,
INFO  04:03:09,051 - #14 step
INFO  04:03:09,051 - #36 ,
INFO  04:03:09,051 - #14 pom
INFO  04:03:09,051 - #36 ,
INFO  04:03:09,051 - #14 novi
INFO  04:03:09,052 - #35 ;
INFO  04:03:09,052 - #5 const
INFO  04:03:09,052 - #14 int
INFO  04:03:09,052 - #14 x
INFO  04:03:09,052 - #32 =
INFO  04:03:09,052 - #15 10
INFO  04:03:09,053 - #35 ;
INFO  04:03:09,053 - #42 {
INFO  04:03:09,054 - #11 void
INFO  04:03:09,054 - #14 main
INFO  04:03:09,054 - #38 (
INFO  04:03:09,054 - #39 )
INFO  04:03:09,054 - #42 {
INFO  04:03:09,054 - #9 read
INFO  04:03:09,055 - #38 (
INFO  04:03:09,055 - #14 a
INFO  04:03:09,055 - #39 )
INFO  04:03:09,055 - #35 ;
INFO  04:03:09,055 - #9 read
INFO  04:03:09,056 - #38 (
INFO  04:03:09,056 - #14 b
INFO  04:03:09,057 - #39 )
INFO  04:03:09,057 - #35 ;
INFO  04:03:09,057 - #14 novi
INFO  04:03:09,057 - #32 =
INFO  04:03:09,058 - #15 0
INFO  04:03:09,058 - #35 ;
INFO  04:03:09,058 - #6 if
INFO  04:03:09,058 - #38 (
INFO  04:03:09,058 - #14 a
INFO  04:03:09,058 - #28 <
INFO  04:03:09,058 - #14 b
INFO  04:03:09,058 - #39 )
INFO  04:03:09,059 - #42 {
INFO  04:03:09,059 - #14 manji
INFO  04:03:09,059 - #32 =
INFO  04:03:09,059 - #14 a
INFO  04:03:09,059 - #35 ;
INFO  04:03:09,059 - #14 veci
INFO  04:03:09,059 - #32 =
INFO  04:03:09,060 - #14 b
INFO  04:03:09,060 - #35 ;
INFO  04:03:09,060 - #43 }
INFO  04:03:09,060 - #4 else
INFO  04:03:09,060 - #42 {
INFO  04:03:09,060 - #14 manji
INFO  04:03:09,061 - #32 =
INFO  04:03:09,061 - #14 b
INFO  04:03:09,061 - #35 ;
INFO  04:03:09,061 - #14 veci
INFO  04:03:09,061 - #32 =
INFO  04:03:09,061 - #14 a
INFO  04:03:09,061 - #35 ;
INFO  04:03:09,062 - #43 }
INFO  04:03:09,062 - #14 pom
INFO  04:03:09,062 - #32 =
INFO  04:03:09,062 - #14 manji
INFO  04:03:09,062 - #35 ;
INFO  04:03:09,062 - #12 while
INFO  04:03:09,062 - #38 (
INFO  04:03:09,063 - #14 pom
INFO  04:03:09,063 - #26 >
INFO  04:03:09,063 - #15 0
INFO  04:03:09,063 - #39 )
INFO  04:03:09,063 - #42 {
INFO  04:03:09,063 - #14 pom
INFO  04:03:09,063 - #32 =
INFO  04:03:09,064 - #14 pom
INFO  04:03:09,064 - #22 /
INFO  04:03:09,064 - #14 x
INFO  04:03:09,064 - #35 ;
INFO  04:03:09,064 - #14 step
INFO  04:03:09,064 - #32 =
INFO  04:03:09,064 - #14 step
INFO  04:03:09,064 - #21 *
INFO  04:03:09,065 - #14 x
INFO  04:03:09,065 - #35 ;
INFO  04:03:09,065 - #43 }
INFO  04:03:09,065 - #14 novi
INFO  04:03:09,065 - #32 =
INFO  04:03:09,065 - #14 veci
INFO  04:03:09,066 - #21 *
INFO  04:03:09,066 - #14 step
INFO  04:03:09,066 - #19 +
INFO  04:03:09,066 - #14 manji
INFO  04:03:09,066 - #35 ;
INFO  04:03:09,066 - #43 }
INFO  04:03:09,066 - #43 }
INFO  04:03:09,067 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test02.mj
INFO  04:03:09,068 - #1 program
INFO  04:03:09,068 - #14 MaxCifra
INFO  04:03:09,068 - #5 const
INFO  04:03:09,068 - #14 x
INFO  04:03:09,068 - #35 ;
INFO  04:03:09,069 - #14 int
INFO  04:03:09,069 - #14 a
INFO  04:03:09,069 - #36 ,
INFO  04:03:09,069 - #14 c
INFO  04:03:09,069 - #36 ,
INFO  04:03:09,069 - #14 maxcif
INFO  04:03:09,070 - #35 ;
INFO  04:03:09,070 - #14 char
INFO  04:03:09,070 - #14 e
INFO  04:03:09,070 - #32 =
INFO  04:03:09,070 - #15 2
INFO  04:03:09,071 - #35 ;
INFO  04:03:09,071 - #14 int
INFO  04:03:09,071 - #14 c
INFO  04:03:09,071 - #35 ;
INFO  04:03:09,071 - #42 {
INFO  04:03:09,071 - #11 void
INFO  04:03:09,072 - #14 main
INFO  04:03:09,072 - #38 (
INFO  04:03:09,072 - #39 )
INFO  04:03:09,072 - #14 char
INFO  04:03:09,072 - #14 a
INFO  04:03:09,073 - #35 ;
INFO  04:03:09,074 - #14 int
INFO  04:03:09,074 - #14 z
INFO  04:03:09,075 - #32 =
INFO  04:03:09,075 - #15 0
INFO  04:03:09,075 - #42 {
INFO  04:03:09,075 - #9 read
INFO  04:03:09,075 - #38 (
INFO  04:03:09,076 - #14 a
INFO  04:03:09,076 - #39 )
INFO  04:03:09,078 - #35 ;
INFO  04:03:09,078 - #14 maxcif
INFO  04:03:09,078 - #32 =
INFO  04:03:09,078 - #15 0
INFO  04:03:09,079 - #35 ;
INFO  04:03:09,079 - #12 while
INFO  04:03:09,079 - #38 (
INFO  04:03:09,079 - #14 a
INFO  04:03:09,079 - #25 !=
INFO  04:03:09,080 - #15 0
INFO  04:03:09,080 - #39 )
INFO  04:03:09,080 - #42 {
INFO  04:03:09,080 - #14 c
INFO  04:03:09,080 - #32 =
INFO  04:03:09,080 - #14 a
INFO  04:03:09,080 - #23 %
INFO  04:03:09,081 - #15 10
INFO  04:03:09,081 - #35 ;
INFO  04:03:09,081 - #6 if
INFO  04:03:09,081 - #38 (
INFO  04:03:09,082 - #14 maxcif
INFO  04:03:09,090 - #28 <
INFO  04:03:09,090 - #26 >
INFO  04:03:09,090 - #14 c
INFO  04:03:09,090 - #39 )
INFO  04:03:09,090 - #14 maxcif
INFO  04:03:09,091 - #32 =
INFO  04:03:09,091 - #14 c
INFO  04:03:09,091 - #35 ;
INFO  04:03:09,091 - #14 a
INFO  04:03:09,091 - #32 =
INFO  04:03:09,091 - #14 a
INFO  04:03:09,091 - #22 /
INFO  04:03:09,092 - #15 10
INFO  04:03:09,092 - #35 ;
INFO  04:03:09,092 - #43 }
INFO  04:03:09,092 - #9 read
INFO  04:03:09,092 - #38 (
INFO  04:03:09,092 - #14 x
INFO  04:03:09,092 - #39 )
INFO  04:03:09,093 - #35 ;
INFO  04:03:09,093 - #14 x
INFO  04:03:09,093 - #33 ++
INFO  04:03:09,093 - #35 ;
INFO  04:03:09,093 - #8 print
INFO  04:03:09,094 - #38 (
INFO  04:03:09,094 - #14 max
INFO  04:03:09,094 - #39 )
INFO  04:03:09,094 - #35 ;
INFO  04:03:09,094 - #43 }
INFO  04:03:09,095 - #43 }
INFO  04:03:09,095 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test03.mj
INFO  04:03:09,096 - #1 program
INFO  04:03:09,096 - #14 test03
INFO  04:03:09,096 - #5 const
INFO  04:03:09,096 - #14 int
INFO  04:03:09,096 - #14 a
INFO  04:03:09,097 - #32 =
INFO  04:03:09,097 - #15 3
INFO  04:03:09,097 - #35 ;
INFO  04:03:09,097 - #14 int
INFO  04:03:09,097 - #14 x
INFO  04:03:09,097 - #36 ,
INFO  04:03:09,097 - #14 y
INFO  04:03:09,098 - #35 ;
INFO  04:03:09,098 - #14 char
INFO  04:03:09,098 - #14 z
INFO  04:03:09,098 - #35 ;
INFO  04:03:09,098 - #42 {
INFO  04:03:09,098 - #11 void
INFO  04:03:09,098 - #14 main
INFO  04:03:09,099 - #38 (
INFO  04:03:09,099 - #39 )
INFO  04:03:09,099 - #42 {
INFO  04:03:09,099 - #9 read
INFO  04:03:09,099 - #38 (
INFO  04:03:09,099 - #14 a
INFO  04:03:09,099 - #39 )
INFO  04:03:09,099 - #35 ;
INFO  04:03:09,100 - #14 a
INFO  04:03:09,100 - #32 =
INFO  04:03:09,100 - #15 5
INFO  04:03:09,100 - #35 ;
INFO  04:03:09,100 - #14 x
INFO  04:03:09,100 - #32 =
INFO  04:03:09,100 - #15 1
INFO  04:03:09,100 - #35 ;
INFO  04:03:09,101 - #14 y
INFO  04:03:09,101 - #32 =
INFO  04:03:09,101 - #15 3
INFO  04:03:09,101 - #35 ;
INFO  04:03:09,101 - #14 z
INFO  04:03:09,101 - #32 =
INFO  04:03:09,101 - #16 'b'
INFO  04:03:09,101 - #35 ;
INFO  04:03:09,101 - #12 while
INFO  04:03:09,102 - #38 (
INFO  04:03:09,102 - #14 z
INFO  04:03:09,102 - #28 <
INFO  04:03:09,102 - #14 a
INFO  04:03:09,102 - #39 )
INFO  04:03:09,102 - #42 {
INFO  04:03:09,103 - #14 z
INFO  04:03:09,103 - #32 =
INFO  04:03:09,103 - #14 y
INFO  04:03:09,103 - #19 +
INFO  04:03:09,103 - #14 x
INFO  04:03:09,103 - #35 ;
INFO  04:03:09,103 - #14 x
INFO  04:03:09,104 - #32 =
INFO  04:03:09,104 - #14 x
INFO  04:03:09,104 - #19 +
INFO  04:03:09,104 - #15 1
INFO  04:03:09,104 - #35 ;
INFO  04:03:09,104 - #43 }
INFO  04:03:09,104 - #2 break
INFO  04:03:09,105 - #35 ;
INFO  04:03:09,105 - #43 }
INFO  04:03:09,105 - #43 }
INFO  04:03:09,105 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test04.mj
INFO  04:03:09,106 - #1 program
INFO  04:03:09,106 - #14 test04
INFO  04:03:09,107 - #5 const
INFO  04:03:09,107 - #14 string
INFO  04:03:09,107 - #14 sa
INFO  04:03:09,107 - #32 =
INFO  04:03:09,107 - #18 "nesto"
INFO  04:03:09,107 - #35 ;
INFO  04:03:09,107 - #14 string
INFO  04:03:09,108 - #14 sb
INFO  04:03:09,108 - #35 ;
INFO  04:03:09,108 - #14 int
INFO  04:03:09,108 - #14 x
INFO  04:03:09,108 - #36 ,
INFO  04:03:09,108 - #14 y
INFO  04:03:09,108 - #35 ;
INFO  04:03:09,108 - #14 int
INFO  04:03:09,109 - #14 a
INFO  04:03:09,109 - #40 [
INFO  04:03:09,109 - #41 ]
INFO  04:03:09,109 - #35 ;
INFO  04:03:09,109 - #14 bool
INFO  04:03:09,109 - #14 log
INFO  04:03:09,109 - #35 ;
INFO  04:03:09,109 - #42 {
INFO  04:03:09,110 - #14 int
INFO  04:03:09,110 - #14 sum
INFO  04:03:09,110 - #38 (
INFO  04:03:09,110 - #14 int
INFO  04:03:09,110 - #14 z
INFO  04:03:09,110 - #36 ,
INFO  04:03:09,110 - #14 int
INFO  04:03:09,110 - #14 d
INFO  04:03:09,111 - #39 )
INFO  04:03:09,111 - #42 {
INFO  04:03:09,111 - #10 return
INFO  04:03:09,111 - #14 z
INFO  04:03:09,111 - #19 +
INFO  04:03:09,111 - #14 d
INFO  04:03:09,111 - #35 ;
INFO  04:03:09,111 - #43 }
INFO  04:03:09,112 - #11 void
INFO  04:03:09,112 - #14 main
INFO  04:03:09,112 - #38 (
INFO  04:03:09,112 - #39 )
INFO  04:03:09,112 - #42 {
INFO  04:03:09,112 - #9 read
INFO  04:03:09,112 - #38 (
INFO  04:03:09,112 - #14 sb
INFO  04:03:09,113 - #39 )
INFO  04:03:09,113 - #35 ;
INFO  04:03:09,113 - #14 sb
INFO  04:03:09,113 - #32 =
INFO  04:03:09,113 - #14 sb
INFO  04:03:09,113 - #19 +
INFO  04:03:09,113 - #14 sa
INFO  04:03:09,114 - #35 ;
INFO  04:03:09,114 - #14 a
INFO  04:03:09,114 - #32 =
INFO  04:03:09,114 - #7 new
INFO  04:03:09,114 - #14 int
INFO  04:03:09,114 - #40 [
INFO  04:03:09,114 - #15 5
INFO  04:03:09,114 - #41 ]
INFO  04:03:09,115 - #35 ;
INFO  04:03:09,115 - #14 log
INFO  04:03:09,115 - #32 =
INFO  04:03:09,115 - #17 true
INFO  04:03:09,115 - #35 ;
INFO  04:03:09,115 - #14 x
INFO  04:03:09,115 - #32 =
INFO  04:03:09,116 - #15 0
INFO  04:03:09,116 - #35 ;
INFO  04:03:09,116 - #14 y
INFO  04:03:09,116 - #32 =
INFO  04:03:09,116 - #15 3
INFO  04:03:09,116 - #35 ;
INFO  04:03:09,116 - #12 while
INFO  04:03:09,116 - #38 (
INFO  04:03:09,117 - #14 log
INFO  04:03:09,117 - #39 )
INFO  04:03:09,117 - #42 {
INFO  04:03:09,117 - #14 a
INFO  04:03:09,117 - #40 [
INFO  04:03:09,117 - #14 x
INFO  04:03:09,117 - #41 ]
INFO  04:03:09,117 - #32 =
INFO  04:03:09,117 - #14 sum
INFO  04:03:09,118 - #38 (
INFO  04:03:09,118 - #14 y
INFO  04:03:09,118 - #36 ,
INFO  04:03:09,118 - #14 x
INFO  04:03:09,118 - #39 )
INFO  04:03:09,118 - #19 +
INFO  04:03:09,118 - #15 1
INFO  04:03:09,118 - #35 ;
INFO  04:03:09,118 - #14 x
INFO  04:03:09,119 - #32 =
INFO  04:03:09,119 - #14 sum
INFO  04:03:09,119 - #38 (
INFO  04:03:09,119 - #14 x
INFO  04:03:09,119 - #36 ,
INFO  04:03:09,119 - #15 1
INFO  04:03:09,120 - #39 )
INFO  04:03:09,120 - #35 ;
INFO  04:03:09,120 - #6 if
INFO  04:03:09,120 - #38 (
INFO  04:03:09,120 - #14 x
INFO  04:03:09,120 - #24 ==
INFO  04:03:09,120 - #15 5
INFO  04:03:09,120 - #39 )
INFO  04:03:09,121 - #2 break
INFO  04:03:09,121 - #35 ;
INFO  04:03:09,121 - #43 }
INFO  04:03:09,121 - #8 print
INFO  04:03:09,121 - #38 (
INFO  04:03:09,121 - #14 a
INFO  04:03:09,121 - #40 [
INFO  04:03:09,121 - #15 3
INFO  04:03:09,122 - #41 ]
INFO  04:03:09,122 - #39 )
INFO  04:03:09,122 - #35 ;
INFO  04:03:09,122 - #8 print
INFO  04:03:09,122 - #38 (
INFO  04:03:09,122 - #14 sb
INFO  04:03:09,123 - #19 +
INFO  04:03:09,123 - #18 "jos nesto"
INFO  04:03:09,123 - #39 )
INFO  04:03:09,123 - #35 ;
INFO  04:03:09,123 - #43 }
INFO  04:03:09,123 - #43 }
INFO  04:03:09,124 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test05.mj
INFO  04:03:09,125 - #1 program
INFO  04:03:09,125 - #14 Rastojanje
INFO  04:03:09,125 - #14 int
INFO  04:03:09,126 - #14 xa
INFO  04:03:09,126 - #36 ,
INFO  04:03:09,126 - #14 ya
INFO  04:03:09,126 - #36 ,
INFO  04:03:09,126 - #14 xb
INFO  04:03:09,127 - #36 ,
INFO  04:03:09,127 - #14 yb
INFO  04:03:09,127 - #36 ,
INFO  04:03:09,127 - #14 xc
INFO  04:03:09,128 - #36 ,
INFO  04:03:09,128 - #14 xc
INFO  04:03:09,128 - #35 ;
INFO  04:03:09,128 - #14 char
INFO  04:03:09,128 - #14 cccc
INFO  04:03:09,128 - #35 ;
INFO  04:03:09,128 - #14 int
INFO  04:03:09,128 - #14 a
INFO  04:03:09,129 - #36 ,
INFO  04:03:09,129 - #14 b
INFO  04:03:09,129 - #14 c
INFO  04:03:09,129 - #35 ;
INFO  04:03:09,129 - #14 int
INFO  04:03:09,129 - #14 u
INFO  04:03:09,129 - #36 ,
INFO  04:03:09,129 - #14 v
INFO  04:03:09,130 - #35 ;
INFO  04:03:09,130 - #42 {
INFO  04:03:09,130 - #14 int
INFO  04:03:09,130 - #14 distance
INFO  04:03:09,130 - #38 (
INFO  04:03:09,130 - #14 int
INFO  04:03:09,130 - #14 x1
INFO  04:03:09,130 - #36 ,
INFO  04:03:09,130 - #14 int
INFO  04:03:09,130 - #14 y1
INFO  04:03:09,131 - #36 ,
INFO  04:03:09,131 - #14 int
INFO  04:03:09,131 - #14 x2
INFO  04:03:09,131 - #36 ,
INFO  04:03:09,131 - #14 int
INFO  04:03:09,131 - #14 y2
INFO  04:03:09,131 - #39 )
INFO  04:03:09,131 - #42 {
INFO  04:03:09,131 - #14 sqrt
INFO  04:03:09,132 - #38 (
INFO  04:03:09,132 - #14 sqr
INFO  04:03:09,132 - #38 (
INFO  04:03:09,132 - #14 x1
INFO  04:03:09,132 - #20 -
INFO  04:03:09,132 - #14 x2
INFO  04:03:09,132 - #39 )
INFO  04:03:09,132 - #19 +
INFO  04:03:09,132 - #14 sqr
INFO  04:03:09,133 - #38 (
INFO  04:03:09,133 - #14 y1
INFO  04:03:09,133 - #20 -
INFO  04:03:09,133 - #14 y2
INFO  04:03:09,133 - #39 )
INFO  04:03:09,133 - #39 )
INFO  04:03:09,133 - #35 ;
INFO  04:03:09,133 - #43 }
INFO  04:03:09,134 - #14 int
INFO  04:03:09,134 - #14 obim
INFO  04:03:09,134 - #38 (
INFO  04:03:09,134 - #14 int
INFO  04:03:09,134 - #14 a
INFO  04:03:09,135 - #36 ,
INFO  04:03:09,135 - #14 int
INFO  04:03:09,135 - #14 b
INFO  04:03:09,135 - #36 ,
INFO  04:03:09,136 - #14 int
INFO  04:03:09,136 - #14 c
INFO  04:03:09,136 - #39 )
INFO  04:03:09,136 - #14 char
INFO  04:03:09,136 - #14 o
INFO  04:03:09,136 - #35 ;
INFO  04:03:09,136 - #42 {
INFO  04:03:09,136 - #14 o
INFO  04:03:09,137 - #32 =
INFO  04:03:09,137 - #14 a
INFO  04:03:09,137 - #19 +
INFO  04:03:09,137 - #14 b
INFO  04:03:09,137 - #19 +
INFO  04:03:09,137 - #14 c
INFO  04:03:09,137 - #35 ;
INFO  04:03:09,137 - #10 return
INFO  04:03:09,138 - #14 o
INFO  04:03:09,138 - #35 ;
INFO  04:03:09,138 - #43 }
INFO  04:03:09,138 - #11 void
INFO  04:03:09,139 - #14 povrsina
INFO  04:03:09,139 - #38 (
INFO  04:03:09,139 - #14 int
INFO  04:03:09,140 - #14 a
INFO  04:03:09,140 - #36 ,
INFO  04:03:09,140 - #14 int
INFO  04:03:09,140 - #14 b
INFO  04:03:09,140 - #36 ,
INFO  04:03:09,140 - #14 int
INFO  04:03:09,140 - #14 c
INFO  04:03:09,140 - #39 )
INFO  04:03:09,141 - #14 string
INFO  04:03:09,141 - #14 s
INFO  04:03:09,141 - #35 ;
INFO  04:03:09,141 - #42 {
INFO  04:03:09,141 - #14 s
INFO  04:03:09,141 - #32 =
INFO  04:03:09,141 - #38 (
INFO  04:03:09,142 - #14 a
INFO  04:03:09,142 - #19 +
INFO  04:03:09,142 - #14 b
INFO  04:03:09,142 - #19 +
INFO  04:03:09,142 - #14 c
INFO  04:03:09,142 - #39 )
INFO  04:03:09,142 - #22 /
INFO  04:03:09,142 - #15 2
INFO  04:03:09,143 - #35 ;
INFO  04:03:09,143 - #10 return
INFO  04:03:09,144 - #14 s
INFO  04:03:09,144 - #35 ;
INFO  04:03:09,145 - #43 }
INFO  04:03:09,145 - #14 int
INFO  04:03:09,145 - #14 pogresna
INFO  04:03:09,146 - #38 (
INFO  04:03:09,146 - #14 int
INFO  04:03:09,146 - #14 x
INFO  04:03:09,146 - #36 ,
INFO  04:03:09,146 - #14 z
INFO  04:03:09,146 - #36 ,
INFO  04:03:09,146 - #14 int
INFO  04:03:09,147 - #39 )
INFO  04:03:09,147 - #42 {
INFO  04:03:09,147 - #10 return
INFO  04:03:09,147 - #15 1
INFO  04:03:09,147 - #35 ;
INFO  04:03:09,148 - #43 }
INFO  04:03:09,148 - #14 int
INFO  04:03:09,148 - #14 main
INFO  04:03:09,148 - #38 (
INFO  04:03:09,148 - #39 )
INFO  04:03:09,148 - #14 bool
INFO  04:03:09,149 - #14 b
INFO  04:03:09,149 - #35 ;
INFO  04:03:09,149 - #14 string
INFO  04:03:09,155 - #14 p
INFO  04:03:09,155 - #42 {
INFO  04:03:09,155 - #9 read
INFO  04:03:09,156 - #38 (
INFO  04:03:09,157 - #14 xc
INFO  04:03:09,157 - #39 )
INFO  04:03:09,157 - #35 ;
INFO  04:03:09,157 - #9 read
INFO  04:03:09,158 - #38 (
INFO  04:03:09,158 - #14 yc
INFO  04:03:09,158 - #39 )
INFO  04:03:09,158 - #35 ;
INFO  04:03:09,158 - #14 a
INFO  04:03:09,158 - #32 =
INFO  04:03:09,158 - #14 distance
INFO  04:03:09,159 - #38 (
INFO  04:03:09,159 - #14 cccc
INFO  04:03:09,159 - #36 ,
INFO  04:03:09,159 - #14 ya
INFO  04:03:09,159 - #36 ,
INFO  04:03:09,159 - #14 xb
INFO  04:03:09,159 - #36 ,
INFO  04:03:09,159 - #14 yb
INFO  04:03:09,159 - #39 )
INFO  04:03:09,160 - #35 ;
INFO  04:03:09,160 - #14 b
INFO  04:03:09,160 - #32 =
INFO  04:03:09,160 - #14 distance
INFO  04:03:09,160 - #38 (
INFO  04:03:09,161 - #14 xb
INFO  04:03:09,161 - #36 ,
INFO  04:03:09,161 - #14 yb
INFO  04:03:09,161 - #36 ,
INFO  04:03:09,161 - #14 xc
INFO  04:03:09,161 - #36 ,
INFO  04:03:09,161 - #14 yc
INFO  04:03:09,161 - #39 )
INFO  04:03:09,161 - #35 ;
INFO  04:03:09,162 - #14 c
INFO  04:03:09,162 - #32 =
INFO  04:03:09,162 - #14 distance
INFO  04:03:09,162 - #38 (
INFO  04:03:09,162 - #14 ya
INFO  04:03:09,162 - #36 ,
INFO  04:03:09,162 - #14 xc
INFO  04:03:09,162 - #36 ,
INFO  04:03:09,163 - #14 yc
INFO  04:03:09,163 - #39 )
INFO  04:03:09,163 - #35 ;
INFO  04:03:09,163 - #6 if
INFO  04:03:09,163 - #38 (
INFO  04:03:09,163 - #14 a
INFO  04:03:09,164 - #19 +
INFO  04:03:09,164 - #14 u
INFO  04:03:09,164 - #26 >
INFO  04:03:09,164 - #14 v
INFO  04:03:09,164 - #30 &&
INFO  04:03:09,164 - #14 a
INFO  04:03:09,164 - #19 +
INFO  04:03:09,164 - #14 v
INFO  04:03:09,165 - #26 >
INFO  04:03:09,165 - #14 u
INFO  04:03:09,165 - #30 &&
INFO  04:03:09,165 - #14 u
INFO  04:03:09,165 - #19 +
INFO  04:03:09,166 - #14 v
INFO  04:03:09,166 - #26 >
INFO  04:03:09,166 - #14 a
INFO  04:03:09,166 - #39 )
INFO  04:03:09,166 - #42 {
INFO  04:03:09,166 - #14 obim
INFO  04:03:09,166 - #38 (
INFO  04:03:09,167 - #14 a
INFO  04:03:09,167 - #36 ,
INFO  04:03:09,167 - #14 b
INFO  04:03:09,167 - #36 ,
INFO  04:03:09,167 - #14 u
INFO  04:03:09,167 - #36 ,
INFO  04:03:09,168 - #14 v
INFO  04:03:09,168 - #39 )
INFO  04:03:09,168 - #35 ;
INFO  04:03:09,168 - #14 povrsina
INFO  04:03:09,168 - #38 (
INFO  04:03:09,168 - #15 5
INFO  04:03:09,169 - #19 +
INFO  04:03:09,169 - #15 2
INFO  04:03:09,169 - #36 ,
INFO  04:03:09,169 - #16 'w'
INFO  04:03:09,169 - #36 ,
INFO  04:03:09,169 - #14 c
INFO  04:03:09,170 - #39 )
INFO  04:03:09,170 - #35 ;
INFO  04:03:09,170 - #8 print
INFO  04:03:09,170 - #38 (
INFO  04:03:09,170 - #18 "Povrsina"
INFO  04:03:09,170 - #19 +
INFO  04:03:09,170 - #18 " trougla "
INFO  04:03:09,170 - #19 +
INFO  04:03:09,171 - #18 "je : "
INFO  04:03:09,171 - #39 )
INFO  04:03:09,171 - #35 ;
INFO  04:03:09,171 - #43 }
INFO  04:03:09,171 - #4 else
INFO  04:03:09,171 - #42 {
INFO  04:03:09,171 - #8 print
INFO  04:03:09,171 - #38 (
INFO  04:03:09,171 - #18 "Tacke ne formiraju trougao!"
INFO  04:03:09,172 - #39 )
INFO  04:03:09,172 - #35 ;
INFO  04:03:09,175 - #8 print
INFO  04:03:09,175 - #38 (
INFO  04:03:09,175 - #14 eol
INFO  04:03:09,176 - #39 )
INFO  04:03:09,176 - #35 ;
INFO  04:03:09,176 - #43 }
INFO  04:03:09,176 - #43 }
INFO  04:03:09,176 - #43 }
INFO  04:03:09,176 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test06.mj
INFO  04:03:09,177 - #1 program
INFO  04:03:09,178 - #14 test06
INFO  04:03:09,178 - #14 int
INFO  04:03:09,178 - #14 a
INFO  04:03:09,178 - #40 [
INFO  04:03:09,178 - #41 ]
INFO  04:03:09,178 - #36 ,
INFO  04:03:09,179 - #14 b
INFO  04:03:09,179 - #40 [
INFO  04:03:09,179 - #41 ]
INFO  04:03:09,179 - #36 ,
INFO  04:03:09,179 - #14 x
INFO  04:03:09,179 - #36 ,
INFO  04:03:09,180 - #14 y
INFO  04:03:09,180 - #35 ;
INFO  04:03:09,180 - #14 char
INFO  04:03:09,180 - #14 c
INFO  04:03:09,180 - #40 [
INFO  04:03:09,180 - #41 ]
INFO  04:03:09,181 - #36 ,
INFO  04:03:09,181 - #14 d
INFO  04:03:09,181 - #40 [
INFO  04:03:09,181 - #41 ]
INFO  04:03:09,181 - #36 ,
INFO  04:03:09,181 - #14 j
INFO  04:03:09,182 - #35 ;
INFO  04:03:09,182 - #42 {
INFO  04:03:09,182 - #11 void
INFO  04:03:09,182 - #14 main
INFO  04:03:09,182 - #38 (
INFO  04:03:09,182 - #39 )
INFO  04:03:09,182 - #42 {
INFO  04:03:09,182 - #14 x
INFO  04:03:09,182 - #32 =
INFO  04:03:09,183 - #15 3
INFO  04:03:09,183 - #35 ;
INFO  04:03:09,183 - #14 a
INFO  04:03:09,183 - #32 =
INFO  04:03:09,183 - #7 new
INFO  04:03:09,184 - #14 char
INFO  04:03:09,184 - #40 [
INFO  04:03:09,184 - #15 5
INFO  04:03:09,184 - #41 ]
INFO  04:03:09,184 - #35 ;
INFO  04:03:09,185 - #14 a
INFO  04:03:09,185 - #40 [
INFO  04:03:09,185 - #14 x
INFO  04:03:09,185 - #33 ++
INFO  04:03:09,185 - #41 ]
INFO  04:03:09,185 - #32 =
INFO  04:03:09,190 - #15 2
INFO  04:03:09,190 - #35 ;
INFO  04:03:09,190 - #14 a
INFO  04:03:09,190 - #40 [
INFO  04:03:09,190 - #14 j
INFO  04:03:09,190 - #41 ]
INFO  04:03:09,191 - #32 =
INFO  04:03:09,191 - #15 3
INFO  04:03:09,191 - #35 ;
INFO  04:03:09,191 - #14 a
INFO  04:03:09,191 - #40 [
INFO  04:03:09,191 - #15 1
INFO  04:03:09,191 - #41 ]
INFO  04:03:09,191 - #32 =
INFO  04:03:09,192 - #14 x
INFO  04:03:09,192 - #19 +
INFO  04:03:09,192 - #14 b
INFO  04:03:09,192 - #35 ;
INFO  04:03:09,192 - #14 j
INFO  04:03:09,192 - #32 =
INFO  04:03:09,192 - #16 'a'
INFO  04:03:09,192 - #35 ;
INFO  04:03:09,192 - #14 c
INFO  04:03:09,193 - #32 =
INFO  04:03:09,193 - #7 new
INFO  04:03:09,193 - #14 char
INFO  04:03:09,193 - #40 [
INFO  04:03:09,193 - #15 3
INFO  04:03:09,193 - #41 ]
INFO  04:03:09,193 - #35 ;
INFO  04:03:09,194 - #14 c
INFO  04:03:09,194 - #40 [
INFO  04:03:09,194 - #15 2
INFO  04:03:09,194 - #41 ]
INFO  04:03:09,194 - #32 =
INFO  04:03:09,194 - #14 j
INFO  04:03:09,194 - #33 ++
INFO  04:03:09,194 - #35 ;
INFO  04:03:09,195 - #14 len
INFO  04:03:09,195 - #38 (
INFO  04:03:09,195 - #14 x
INFO  04:03:09,195 - #39 )
INFO  04:03:09,195 - #35 ;
INFO  04:03:09,195 - #14 len
INFO  04:03:09,195 - #38 (
INFO  04:03:09,195 - #14 a
INFO  04:03:09,195 - #39 )
INFO  04:03:09,196 - #35 ;
INFO  04:03:09,196 - #8 print
INFO  04:03:09,196 - #38 (
INFO  04:03:09,196 - #14 a
INFO  04:03:09,196 - #39 )
INFO  04:03:09,196 - #35 ;
INFO  04:03:09,196 - #43 }
INFO  04:03:09,196 - #43 }
INFO  04:03:09,197 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test07.mj
INFO  04:03:09,198 - #1 program
INFO  04:03:09,198 - #14 Geometrija
INFO  04:03:09,198 - #5 const
INFO  04:03:09,198 - #14 int
INFO  04:03:09,199 - #14 PI
INFO  04:03:09,199 - #32 =
INFO  04:03:09,199 - #15 3
INFO  04:03:09,199 - #35 ;
INFO  04:03:09,199 - #14 int
INFO  04:03:09,200 - #14 rezultati
INFO  04:03:09,200 - #40 [
INFO  04:03:09,200 - #41 ]
INFO  04:03:09,200 - #35 ;
INFO  04:03:09,200 - #14 int
INFO  04:03:09,200 - #14 c
INFO  04:03:09,201 - #35 ;
INFO  04:03:09,201 - #3 class
INFO  04:03:09,201 - #14 kvadrat
INFO  04:03:09,201 - #42 {
INFO  04:03:09,201 - #14 string
INFO  04:03:09,201 - #14 ime
INFO  04:03:09,201 - #35 ;
INFO  04:03:09,201 - #14 int
INFO  04:03:09,202 - #14 a
INFO  04:03:09,202 - #35 ;
INFO  04:03:09,202 - #14 int
INFO  04:03:09,202 - #14 b
INFO  04:03:09,202 - #35 ;
INFO  04:03:09,202 - #42 {
INFO  04:03:09,202 - #14 int
INFO  04:03:09,202 - #14 povrsina
INFO  04:03:09,202 - #38 (
INFO  04:03:09,202 - #39 )
INFO  04:03:09,203 - #14 int
INFO  04:03:09,203 - #14 p
INFO  04:03:09,203 - #35 ;
INFO  04:03:09,203 - #42 {
INFO  04:03:09,203 - #14 p
INFO  04:03:09,203 - #32 =
INFO  04:03:09,203 - #14 a
INFO  04:03:09,203 - #21 *
INFO  04:03:09,203 - #14 b
INFO  04:03:09,203 - #35 ;
INFO  04:03:09,204 - #10 return
INFO  04:03:09,204 - #14 p
INFO  04:03:09,204 - #35 ;
INFO  04:03:09,204 - #43 }
INFO  04:03:09,204 - #11 void
INFO  04:03:09,204 - #14 setA
INFO  04:03:09,204 - #38 (
INFO  04:03:09,204 - #39 )
INFO  04:03:09,205 - #42 {
INFO  04:03:09,205 - #9 read
INFO  04:03:09,205 - #38 (
INFO  04:03:09,205 - #14 a
INFO  04:03:09,205 - #39 )
INFO  04:03:09,205 - #35 ;
INFO  04:03:09,206 - #43 }
INFO  04:03:09,207 - #11 void
INFO  04:03:09,207 - #14 setB
INFO  04:03:09,207 - #38 (
INFO  04:03:09,207 - #39 )
INFO  04:03:09,207 - #42 {
INFO  04:03:09,207 - #9 read
INFO  04:03:09,207 - #38 (
INFO  04:03:09,207 - #14 b
INFO  04:03:09,207 - #39 )
INFO  04:03:09,207 - #35 ;
INFO  04:03:09,208 - #43 }
INFO  04:03:09,208 - #11 void
INFO  04:03:09,208 - #14 setIme
INFO  04:03:09,208 - #38 (
INFO  04:03:09,208 - #39 )
INFO  04:03:09,208 - #42 {
INFO  04:03:09,208 - #9 read
INFO  04:03:09,208 - #38 (
INFO  04:03:09,208 - #14 ime
INFO  04:03:09,209 - #39 )
INFO  04:03:09,209 - #35 ;
INFO  04:03:09,209 - #43 }
INFO  04:03:09,209 - #43 }
INFO  04:03:09,209 - #43 }
INFO  04:03:09,209 - #14 kvadrat
INFO  04:03:09,209 - #14 kvad
INFO  04:03:09,209 - #35 ;
INFO  04:03:09,209 - #42 {
INFO  04:03:09,210 - #14 int
INFO  04:03:09,210 - #14 obim
INFO  04:03:09,210 - #38 (
INFO  04:03:09,210 - #14 int
INFO  04:03:09,210 - #14 x
INFO  04:03:09,210 - #36 ,
INFO  04:03:09,211 - #14 int
INFO  04:03:09,211 - #14 y
INFO  04:03:09,211 - #39 )
INFO  04:03:09,211 - #14 int
INFO  04:03:09,211 - #14 rez
INFO  04:03:09,211 - #35 ;
INFO  04:03:09,211 - #42 {
INFO  04:03:09,211 - #14 rez
INFO  04:03:09,211 - #32 =
INFO  04:03:09,212 - #15 2
INFO  04:03:09,212 - #21 *
INFO  04:03:09,212 - #14 x
INFO  04:03:09,212 - #19 +
INFO  04:03:09,212 - #15 2
INFO  04:03:09,212 - #21 *
INFO  04:03:09,212 - #14 y
INFO  04:03:09,212 - #35 ;
INFO  04:03:09,212 - #10 return
INFO  04:03:09,212 - #14 rez
INFO  04:03:09,213 - #35 ;
INFO  04:03:09,213 - #43 }
INFO  04:03:09,213 - #14 int
INFO  04:03:09,213 - #14 obim2
INFO  04:03:09,213 - #38 (
INFO  04:03:09,214 - #14 kvadrat
INFO  04:03:09,214 - #14 k
INFO  04:03:09,214 - #39 )
INFO  04:03:09,214 - #14 int
INFO  04:03:09,214 - #14 rez
INFO  04:03:09,214 - #35 ;
INFO  04:03:09,214 - #14 kvadrat
INFO  04:03:09,214 - #14 pom
INFO  04:03:09,215 - #35 ;
INFO  04:03:09,215 - #42 {
INFO  04:03:09,215 - #14 pom
INFO  04:03:09,215 - #32 =
INFO  04:03:09,215 - #14 k
INFO  04:03:09,215 - #35 ;
INFO  04:03:09,216 - #14 rez
INFO  04:03:09,216 - #32 =
INFO  04:03:09,217 - #15 2
INFO  04:03:09,217 - #21 *
INFO  04:03:09,222 - #14 pom
INFO  04:03:09,223 - #37 .
INFO  04:03:09,223 - #14 b
INFO  04:03:09,224 - #19 +
INFO  04:03:09,224 - #15 2
INFO  04:03:09,224 - #21 *
INFO  04:03:09,225 - #14 pom
INFO  04:03:09,225 - #37 .
INFO  04:03:09,225 - #14 a
INFO  04:03:09,225 - #35 ;
INFO  04:03:09,225 - #10 return
INFO  04:03:09,225 - #14 rez
INFO  04:03:09,226 - #35 ;
INFO  04:03:09,226 - #43 }
INFO  04:03:09,226 - #14 int
INFO  04:03:09,226 - #14 racunaj
INFO  04:03:09,226 - #38 (
INFO  04:03:09,226 - #39 )
INFO  04:03:09,226 - #14 int
INFO  04:03:09,227 - #14 x
INFO  04:03:09,227 - #35 ;
INFO  04:03:09,227 - #14 char
INFO  04:03:09,227 - #14 i
INFO  04:03:09,228 - #40 [
INFO  04:03:09,228 - #41 ]
INFO  04:03:09,228 - #35 ;
INFO  04:03:09,228 - #42 {
INFO  04:03:09,228 - #9 read
INFO  04:03:09,228 - #38 (
INFO  04:03:09,228 - #14 x
INFO  04:03:09,228 - #39 )
INFO  04:03:09,228 - #35 ;
INFO  04:03:09,229 - #10 return
INFO  04:03:09,229 - #14 x
INFO  04:03:09,229 - #35 ;
INFO  04:03:09,229 - #43 }
INFO  04:03:09,230 - #14 int
INFO  04:03:09,230 - #14 saberi
INFO  04:03:09,230 - #38 (
INFO  04:03:09,230 - #14 int
INFO  04:03:09,230 - #14 b
INFO  04:03:09,230 - #36 ,
INFO  04:03:09,230 - #14 int
INFO  04:03:09,231 - #14 c
INFO  04:03:09,231 - #39 )
INFO  04:03:09,231 - #14 int
INFO  04:03:09,231 - #14 r
INFO  04:03:09,231 - #35 ;
INFO  04:03:09,231 - #42 {
INFO  04:03:09,232 - #14 b
INFO  04:03:09,232 - #32 =
INFO  04:03:09,232 - #14 r
INFO  04:03:09,233 - #19 +
INFO  04:03:09,233 - #14 c
INFO  04:03:09,240 - #35 ;
INFO  04:03:09,240 - #10 return
INFO  04:03:09,244 - #14 b
INFO  04:03:09,245 - #35 ;
INFO  04:03:09,245 - #43 }
INFO  04:03:09,245 - #14 int
INFO  04:03:09,245 - #14 prosledi
INFO  04:03:09,246 - #38 (
INFO  04:03:09,246 - #14 int
INFO  04:03:09,248 - #14 f
INFO  04:03:09,248 - #39 )
INFO  04:03:09,248 - #14 int
INFO  04:03:09,248 - #14 g
INFO  04:03:09,248 - #35 ;
INFO  04:03:09,248 - #42 {
INFO  04:03:09,249 - #14 g
INFO  04:03:09,249 - #32 =
INFO  04:03:09,249 - #14 f
INFO  04:03:09,249 - #35 ;
INFO  04:03:09,249 - #10 return
INFO  04:03:09,249 - #14 g
INFO  04:03:09,249 - #35 ;
INFO  04:03:09,250 - #43 }
INFO  04:03:09,250 - #11 void
INFO  04:03:09,250 - #14 stampaj
INFO  04:03:09,250 - #38 (
INFO  04:03:09,250 - #14 char
INFO  04:03:09,250 - #14 r
INFO  04:03:09,251 - #39 )
INFO  04:03:09,251 - #42 {
INFO  04:03:09,251 - #8 print
INFO  04:03:09,251 - #38 (
INFO  04:03:09,251 - #14 r
INFO  04:03:09,251 - #39 )
INFO  04:03:09,252 - #35 ;
INFO  04:03:09,252 - #43 }
INFO  04:03:09,252 - #11 void
INFO  04:03:09,252 - #14 main
INFO  04:03:09,252 - #38 (
INFO  04:03:09,260 - #39 )
INFO  04:03:09,260 - #42 {
INFO  04:03:09,261 - #14 rezultati
INFO  04:03:09,261 - #40 [
INFO  04:03:09,261 - #15 1
INFO  04:03:09,262 - #41 ]
INFO  04:03:09,262 - #32 =
INFO  04:03:09,262 - #15 1
INFO  04:03:09,262 - #35 ;
INFO  04:03:09,262 - #14 kvad
INFO  04:03:09,262 - #37 .
INFO  04:03:09,262 - #14 setA
INFO  04:03:09,262 - #38 (
INFO  04:03:09,263 - #39 )
INFO  04:03:09,263 - #35 ;
INFO  04:03:09,263 - #14 kvad
INFO  04:03:09,263 - #37 .
INFO  04:03:09,263 - #14 setB
INFO  04:03:09,263 - #38 (
INFO  04:03:09,264 - #39 )
INFO  04:03:09,264 - #35 ;
INFO  04:03:09,264 - #14 rezultati
INFO  04:03:09,264 - #40 [
INFO  04:03:09,264 - #15 2
INFO  04:03:09,264 - #41 ]
INFO  04:03:09,265 - #32 =
INFO  04:03:09,265 - #14 kvad
INFO  04:03:09,265 - #37 .
INFO  04:03:09,265 - #14 povrsina
INFO  04:03:09,265 - #38 (
INFO  04:03:09,265 - #39 )
INFO  04:03:09,265 - #35 ;
INFO  04:03:09,265 - #14 rezultati
INFO  04:03:09,265 - #40 [
INFO  04:03:09,266 - #15 3
INFO  04:03:09,266 - #41 ]
INFO  04:03:09,266 - #32 =
INFO  04:03:09,266 - #14 obim2
INFO  04:03:09,266 - #38 (
INFO  04:03:09,266 - #14 kvad
INFO  04:03:09,266 - #39 )
INFO  04:03:09,267 - #35 ;
INFO  04:03:09,267 - #6 if
INFO  04:03:09,267 - #38 (
INFO  04:03:09,267 - #14 c
INFO  04:03:09,267 - #26 >
INFO  04:03:09,267 - #15 0
INFO  04:03:09,267 - #39 )
INFO  04:03:09,267 - #42 {
INFO  04:03:09,267 - #12 while
INFO  04:03:09,268 - #38 (
INFO  04:03:09,268 - #14 c
INFO  04:03:09,268 - #26 >
INFO  04:03:09,268 - #15 0
INFO  04:03:09,268 - #39 )
INFO  04:03:09,268 - #9 read
INFO  04:03:09,268 - #38 (
INFO  04:03:09,268 - #14 c
INFO  04:03:09,268 - #39 )
INFO  04:03:09,269 - #35 ;
INFO  04:03:09,269 - #43 }
INFO  04:03:09,269 - #14 c
INFO  04:03:09,269 - #32 =
INFO  04:03:09,269 - #14 racunaj
INFO  04:03:09,269 - #38 (
INFO  04:03:09,269 - #39 )
INFO  04:03:09,269 - #35 ;
INFO  04:03:09,270 - #43 }
INFO  04:03:09,270 - #43 }
INFO  04:03:09,270 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test08.mj
INFO  04:03:09,271 - #1 program
INFO  04:03:09,272 - #14 test08
INFO  04:03:09,272 - #3 class
INFO  04:03:09,272 - #14 Alfa
INFO  04:03:09,272 - #13 extends
INFO  04:03:09,273 - #14 Nepostojeca
INFO  04:03:09,274 - #42 {
INFO  04:03:09,274 - #14 int
INFO  04:03:09,274 - #14 x
INFO  04:03:09,275 - #35 ;
INFO  04:03:09,275 - #14 char
INFO  04:03:09,275 - #14 x
INFO  04:03:09,275 - #35 ;
INFO  04:03:09,275 - #14 real
INFO  04:03:09,275 - #14 y
INFO  04:03:09,275 - #35 ;
INFO  04:03:09,275 - #14 y
INFO  04:03:09,275 - #14 z
INFO  04:03:09,276 - #35 ;
INFO  04:03:09,276 - #14 char
INFO  04:03:09,276 - #14 b
INFO  04:03:09,276 - #35 ;
INFO  04:03:09,276 - #42 {
INFO  04:03:09,276 - #11 void
INFO  04:03:09,276 - #14 k
INFO  04:03:09,276 - #38 (
INFO  04:03:09,277 - #39 )
INFO  04:03:09,277 - #42 {
INFO  04:03:09,277 - #14 this
INFO  04:03:09,277 - #37 .
INFO  04:03:09,277 - #14 b
INFO  04:03:09,277 - #32 =
INFO  04:03:09,277 - #16 'a'
INFO  04:03:09,277 - #35 ;
INFO  04:03:09,277 - #43 }
INFO  04:03:09,277 - #14 int
INFO  04:03:09,277 - #14 f
INFO  04:03:09,278 - #38 (
INFO  04:03:09,278 - #14 int
INFO  04:03:09,278 - #14 sss
INFO  04:03:09,278 - #39 )
INFO  04:03:09,278 - #42 {
INFO  04:03:09,278 - #14 this
INFO  04:03:09,278 - #32 =
INFO  04:03:09,278 - #15 1
INFO  04:03:09,278 - #35 ;
INFO  04:03:09,278 - #14 this
INFO  04:03:09,279 - #37 .
INFO  04:03:09,279 - #14 b
INFO  04:03:09,279 - #32 =
INFO  04:03:09,279 - #15 1
INFO  04:03:09,279 - #35 ;
INFO  04:03:09,279 - #14 this
INFO  04:03:09,279 - #37 .
INFO  04:03:09,279 - #14 zh
INFO  04:03:09,279 - #32 =
INFO  04:03:09,279 - #15 2
INFO  04:03:09,280 - #35 ;
INFO  04:03:09,280 - #14 this
INFO  04:03:09,280 - #37 .
INFO  04:03:09,280 - #14 b
INFO  04:03:09,280 - #32 =
INFO  04:03:09,280 - #14 k
INFO  04:03:09,280 - #38 (
INFO  04:03:09,280 - #39 )
INFO  04:03:09,280 - #35 ;
INFO  04:03:09,280 - #10 return
INFO  04:03:09,280 - #14 b
INFO  04:03:09,281 - #35 ;
INFO  04:03:09,281 - #43 }
INFO  04:03:09,281 - #43 }
INFO  04:03:09,281 - #43 }
INFO  04:03:09,281 - #3 class
INFO  04:03:09,281 - #14 Beta
INFO  04:03:09,281 - #42 {
INFO  04:03:09,281 - #14 int
INFO  04:03:09,281 - #14 a
INFO  04:03:09,282 - #36 ,
INFO  04:03:09,282 - #14 b
INFO  04:03:09,282 - #35 ;
INFO  04:03:09,282 - #42 {
INFO  04:03:09,282 - #11 void
INFO  04:03:09,282 - #14 setA
INFO  04:03:09,282 - #38 (
INFO  04:03:09,282 - #39 )
INFO  04:03:09,282 - #42 {
INFO  04:03:09,282 - #9 read
INFO  04:03:09,283 - #38 (
INFO  04:03:09,283 - #14 a
INFO  04:03:09,283 - #39 )
INFO  04:03:09,283 - #35 ;
INFO  04:03:09,283 - #43 }
INFO  04:03:09,283 - #11 void
INFO  04:03:09,283 - #14 setAB
INFO  04:03:09,283 - #38 (
INFO  04:03:09,284 - #14 int
INFO  04:03:09,284 - #14 aa
INFO  04:03:09,284 - #36 ,
INFO  04:03:09,284 - #14 int
INFO  04:03:09,284 - #14 bb
INFO  04:03:09,284 - #39 )
INFO  04:03:09,285 - #42 {
INFO  04:03:09,285 - #14 a
INFO  04:03:09,285 - #32 =
INFO  04:03:09,285 - #14 aa
INFO  04:03:09,285 - #35 ;
INFO  04:03:09,285 - #14 b
INFO  04:03:09,287 - #32 =
INFO  04:03:09,288 - #14 bb
INFO  04:03:09,289 - #35 ;
INFO  04:03:09,289 - #43 }
INFO  04:03:09,290 - #43 }
INFO  04:03:09,290 - #43 }
INFO  04:03:09,290 - #3 class
INFO  04:03:09,290 - #14 Gama
INFO  04:03:09,290 - #13 extends
INFO  04:03:09,290 - #14 Beta
INFO  04:03:09,291 - #42 {
INFO  04:03:09,291 - #14 Beta
INFO  04:03:09,291 - #14 b
INFO  04:03:09,291 - #35 ;
INFO  04:03:09,291 - #43 }
INFO  04:03:09,291 - #14 Gama
INFO  04:03:09,291 - #14 g
INFO  04:03:09,291 - #35 ;
INFO  04:03:09,291 - #42 {
INFO  04:03:09,291 - #11 void
INFO  04:03:09,292 - #14 main2
INFO  04:03:09,292 - #38 (
INFO  04:03:09,292 - #39 )
INFO  04:03:09,292 - #14 Alfa
INFO  04:03:09,292 - #14 a
INFO  04:03:09,292 - #35 ;
INFO  04:03:09,292 - #42 {
INFO  04:03:09,292 - #14 a
INFO  04:03:09,292 - #32 =
INFO  04:03:09,292 - #7 new
INFO  04:03:09,293 - #14 Alfa
INFO  04:03:09,293 - #35 ;
INFO  04:03:09,293 - #14 g
INFO  04:03:09,293 - #32 =
INFO  04:03:09,293 - #7 new
INFO  04:03:09,293 - #14 Gama
INFO  04:03:09,293 - #35 ;
INFO  04:03:09,293 - #8 print
INFO  04:03:09,293 - #38 (
INFO  04:03:09,293 - #14 a
INFO  04:03:09,293 - #37 .
INFO  04:03:09,294 - #14 f
INFO  04:03:09,294 - #38 (
INFO  04:03:09,294 - #38 (
INFO  04:03:09,294 - #15 3
INFO  04:03:09,294 - #19 +
INFO  04:03:09,294 - #15 5
INFO  04:03:09,294 - #39 )
INFO  04:03:09,294 - #20 -
INFO  04:03:09,295 - #15 4
INFO  04:03:09,295 - #39 )
INFO  04:03:09,295 - #39 )
INFO  04:03:09,295 - #35 ;
INFO  04:03:09,295 - #14 this
INFO  04:03:09,295 - #32 =
INFO  04:03:09,295 - #15 3
INFO  04:03:09,295 - #35 ;
INFO  04:03:09,296 - #14 g
INFO  04:03:09,296 - #37 .
INFO  04:03:09,296 - #14 setA
INFO  04:03:09,296 - #38 (
INFO  04:03:09,296 - #15 2
INFO  04:03:09,296 - #39 )
INFO  04:03:09,296 - #35 ;
INFO  04:03:09,296 - #14 g
INFO  04:03:09,296 - #37 .
INFO  04:03:09,296 - #14 setAB
INFO  04:03:09,296 - #38 (
INFO  04:03:09,297 - #15 2
INFO  04:03:09,297 - #39 )
INFO  04:03:09,297 - #35 ;
INFO  04:03:09,297 - #14 g
INFO  04:03:09,297 - #37 .
INFO  04:03:09,297 - #14 setAB
INFO  04:03:09,297 - #38 (
INFO  04:03:09,297 - #16 'a'
INFO  04:03:09,297 - #36 ,
INFO  04:03:09,297 - #16 'b'
INFO  04:03:09,298 - #39 )
INFO  04:03:09,298 - #35 ;
INFO  04:03:09,298 - #14 g
INFO  04:03:09,298 - #37 .
INFO  04:03:09,298 - #14 setAB
INFO  04:03:09,298 - #38 (
INFO  04:03:09,298 - #16 'a'
INFO  04:03:09,298 - #36 ,
INFO  04:03:09,298 - #15 5
INFO  04:03:09,298 - #39 )
INFO  04:03:09,299 - #35 ;
INFO  04:03:09,299 - #14 g
INFO  04:03:09,299 - #37 .
INFO  04:03:09,299 - #14 setAB
INFO  04:03:09,299 - #38 (
INFO  04:03:09,299 - #15 5
INFO  04:03:09,299 - #36 ,
INFO  04:03:09,299 - #16 'b'
INFO  04:03:09,299 - #39 )
INFO  04:03:09,299 - #35 ;
INFO  04:03:09,300 - #43 }
INFO  04:03:09,300 - #43 }
INFO  04:03:09,300 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test09.mj
INFO  04:03:09,301 - #1 program
INFO  04:03:09,301 - #14 MJAlfabet
INFO  04:03:09,301 - #14 string
INFO  04:03:09,301 - #14 str1
INFO  04:03:09,302 - #36 ,
INFO  04:03:09,302 - #14 str2
INFO  04:03:09,302 - #35 ;
INFO  04:03:09,302 - #14 char
INFO  04:03:09,302 - #14 i
INFO  04:03:09,302 - #35 ;
INFO  04:03:09,302 - #3 class
INFO  04:03:09,302 - #14 Alfa
INFO  04:03:09,302 - #42 {
INFO  04:03:09,302 - #14 char
INFO  04:03:09,302 - #14 a
INFO  04:03:09,303 - #36 ,
INFO  04:03:09,303 - #14 b
INFO  04:03:09,303 - #35 ;
INFO  04:03:09,303 - #14 int
INFO  04:03:09,303 - #14 rez
INFO  04:03:09,303 - #35 ;
INFO  04:03:09,303 - #42 {
INFO  04:03:09,304 - #11 void
INFO  04:03:09,304 - #14 dodaj
INFO  04:03:09,304 - #38 (
INFO  04:03:09,304 - #14 int
INFO  04:03:09,304 - #14 x
INFO  04:03:09,304 - #36 ,
INFO  04:03:09,304 - #14 int
INFO  04:03:09,304 - #14 y
INFO  04:03:09,305 - #36 ,
INFO  04:03:09,305 - #14 int
INFO  04:03:09,305 - #14 z
INFO  04:03:09,305 - #39 )
INFO  04:03:09,305 - #42 {
INFO  04:03:09,305 - #14 a
INFO  04:03:09,305 - #32 =
INFO  04:03:09,306 - #14 x
INFO  04:03:09,306 - #35 ;
INFO  04:03:09,306 - #14 z
INFO  04:03:09,306 - #32 =
INFO  04:03:09,306 - #14 x
INFO  04:03:09,307 - #19 +
INFO  04:03:09,307 - #14 y
INFO  04:03:09,307 - #35 ;
INFO  04:03:09,307 - #10 return
INFO  04:03:09,307 - #14 z
INFO  04:03:09,307 - #35 ;
INFO  04:03:09,307 - #43 }
INFO  04:03:09,307 - #11 void
INFO  04:03:09,307 - #14 saberi
INFO  04:03:09,307 - #38 (
INFO  04:03:09,308 - #14 int
INFO  04:03:09,308 - #14 x
INFO  04:03:09,308 - #36 ,
INFO  04:03:09,308 - #14 int
INFO  04:03:09,308 - #14 y
INFO  04:03:09,308 - #39 )
INFO  04:03:09,308 - #42 {
INFO  04:03:09,308 - #14 rez
INFO  04:03:09,308 - #32 =
INFO  04:03:09,308 - #14 x
INFO  04:03:09,309 - #19 +
INFO  04:03:09,309 - #14 y
INFO  04:03:09,309 - #35 ;
INFO  04:03:09,309 - #43 }
INFO  04:03:09,309 - #11 void
INFO  04:03:09,309 - #14 saberi
INFO  04:03:09,309 - #38 (
INFO  04:03:09,309 - #14 int
INFO  04:03:09,309 - #14 x
INFO  04:03:09,309 - #39 )
INFO  04:03:09,310 - #42 {
INFO  04:03:09,310 - #14 rez
INFO  04:03:09,310 - #32 =
INFO  04:03:09,310 - #14 rez
INFO  04:03:09,310 - #19 +
INFO  04:03:09,310 - #14 x
INFO  04:03:09,310 - #35 ;
INFO  04:03:09,310 - #43 }
INFO  04:03:09,310 - #43 }
INFO  04:03:09,311 - #43 }
INFO  04:03:09,311 - #3 class
INFO  04:03:09,311 - #14 Beta
INFO  04:03:09,311 - #13 extends
INFO  04:03:09,311 - #14 Alfa
INFO  04:03:09,311 - #42 {
INFO  04:03:09,311 - #14 int
INFO  04:03:09,311 - #14 c
INFO  04:03:09,312 - #35 ;
INFO  04:03:09,312 - #14 char
INFO  04:03:09,312 - #14 d
INFO  04:03:09,312 - #40 [
INFO  04:03:09,312 - #41 ]
INFO  04:03:09,312 - #35 ;
INFO  04:03:09,312 - #42 {
INFO  04:03:09,312 - #11 void
INFO  04:03:09,312 - #14 dodaj
INFO  04:03:09,312 - #38 (
INFO  04:03:09,312 - #14 int
INFO  04:03:09,313 - #14 x
INFO  04:03:09,313 - #36 ,
INFO  04:03:09,313 - #14 int
INFO  04:03:09,313 - #14 y
INFO  04:03:09,313 - #36 ,
INFO  04:03:09,313 - #14 int
INFO  04:03:09,314 - #14 z
INFO  04:03:09,314 - #39 )
INFO  04:03:09,314 - #14 bool
INFO  04:03:09,314 - #14 bulova
INFO  04:03:09,314 - #35 ;
INFO  04:03:09,314 - #42 {
INFO  04:03:09,314 - #14 c
INFO  04:03:09,314 - #32 =
INFO  04:03:09,315 - #14 bulova
INFO  04:03:09,315 - #33 ++
INFO  04:03:09,315 - #35 ;
INFO  04:03:09,315 - #14 a
INFO  04:03:09,315 - #32 =
INFO  04:03:09,315 - #18 "Alfa"
INFO  04:03:09,315 - #35 ;
INFO  04:03:09,315 - #14 d
INFO  04:03:09,315 - #32 =
INFO  04:03:09,315 - #18 "Delta"
INFO  04:03:09,316 - #35 ;
INFO  04:03:09,316 - #14 b
INFO  04:03:09,316 - #32 =
INFO  04:03:09,316 - #16 'b'
INFO  04:03:09,317 - #35 ;
INFO  04:03:09,317 - #8 print
INFO  04:03:09,317 - #38 (
INFO  04:03:09,317 - #14 b
INFO  04:03:09,317 - #39 )
INFO  04:03:09,317 - #35 ;
INFO  04:03:09,317 - #43 }
INFO  04:03:09,318 - #43 }
INFO  04:03:09,318 - #43 }
INFO  04:03:09,318 - #3 class
INFO  04:03:09,318 - #14 Gama
INFO  04:03:09,318 - #13 extends
INFO  04:03:09,318 - #14 Alfa
INFO  04:03:09,319 - #42 {
INFO  04:03:09,319 - #14 int
INFO  04:03:09,319 - #14 a
INFO  04:03:09,319 - #35 ;
INFO  04:03:09,319 - #42 {
INFO  04:03:09,319 - #11 void
INFO  04:03:09,319 - #14 dodaj
INFO  04:03:09,320 - #38 (
INFO  04:03:09,320 - #14 int
INFO  04:03:09,320 - #14 x
INFO  04:03:09,320 - #36 ,
INFO  04:03:09,320 - #14 int
INFO  04:03:09,320 - #14 y
INFO  04:03:09,321 - #36 ,
INFO  04:03:09,321 - #14 int
INFO  04:03:09,321 - #14 z
INFO  04:03:09,321 - #39 )
INFO  04:03:09,321 - #42 {
INFO  04:03:09,321 - #14 a
INFO  04:03:09,321 - #32 =
INFO  04:03:09,322 - #14 x
INFO  04:03:09,322 - #35 ;
INFO  04:03:09,322 - #14 i
INFO  04:03:09,331 - #32 =
INFO  04:03:09,331 - #16 'i'
INFO  04:03:09,331 - #35 ;
INFO  04:03:09,331 - #14 niz
INFO  04:03:09,332 - #32 =
INFO  04:03:09,332 - #7 new
INFO  04:03:09,332 - #14 int
INFO  04:03:09,332 - #40 [
INFO  04:03:09,332 - #15 5
INFO  04:03:09,332 - #41 ]
INFO  04:03:09,332 - #35 ;
INFO  04:03:09,333 - #12 while
INFO  04:03:09,337 - #38 (
INFO  04:03:09,337 - #14 i
INFO  04:03:09,337 - #28 <
INFO  04:03:09,337 - #15 5
INFO  04:03:09,337 - #39 )
INFO  04:03:09,337 - #14 niz
INFO  04:03:09,337 - #40 [
INFO  04:03:09,337 - #14 i
INFO  04:03:09,337 - #41 ]
INFO  04:03:09,338 - #32 =
INFO  04:03:09,338 - #14 x
INFO  04:03:09,338 - #19 +
INFO  04:03:09,338 - #14 y
INFO  04:03:09,338 - #19 +
INFO  04:03:09,338 - #14 z
INFO  04:03:09,338 - #19 +
INFO  04:03:09,338 - #14 i
INFO  04:03:09,338 - #35 ;
INFO  04:03:09,338 - #14 i
INFO  04:03:09,338 - #33 ++
INFO  04:03:09,339 - #35 ;
INFO  04:03:09,341 - #43 }
INFO  04:03:09,341 - #43 }
INFO  04:03:09,341 - #43 }
INFO  04:03:09,341 - #3 class
INFO  04:03:09,341 - #14 Delta
INFO  04:03:09,341 - #42 {
INFO  04:03:09,341 - #42 {
INFO  04:03:09,341 - #14 bool
INFO  04:03:09,342 - #14 stampaj
INFO  04:03:09,342 - #38 (
INFO  04:03:09,342 - #39 )
INFO  04:03:09,342 - #42 {
INFO  04:03:09,342 - #8 print
INFO  04:03:09,342 - #38 (
INFO  04:03:09,342 - #18 "alfa"
INFO  04:03:09,342 - #19 +
INFO  04:03:09,342 - #18 "i"
INFO  04:03:09,342 - #19 +
INFO  04:03:09,342 - #18 "omega"
INFO  04:03:09,343 - #39 )
INFO  04:03:09,343 - #35 ;
INFO  04:03:09,344 - #43 }
INFO  04:03:09,344 - #43 }
INFO  04:03:09,344 - #43 }
INFO  04:03:09,345 - #42 {
INFO  04:03:09,345 - #11 void
INFO  04:03:09,345 - #14 main
INFO  04:03:09,345 - #38 (
INFO  04:03:09,345 - #39 )
INFO  04:03:09,345 - #14 Alfa
INFO  04:03:09,345 - #14 a1
INFO  04:03:09,346 - #36 ,
INFO  04:03:09,346 - #14 a2
INFO  04:03:09,346 - #35 ;
INFO  04:03:09,346 - #14 Beta
INFO  04:03:09,346 - #14 b
INFO  04:03:09,346 - #35 ;
INFO  04:03:09,346 - #14 Gama
INFO  04:03:09,347 - #14 g
INFO  04:03:09,347 - #35 ;
INFO  04:03:09,347 - #14 Delta
INFO  04:03:09,347 - #14 d
INFO  04:03:09,347 - #35 ;
INFO  04:03:09,347 - #42 {
INFO  04:03:09,347 - #14 a1
INFO  04:03:09,348 - #32 =
INFO  04:03:09,348 - #7 new
INFO  04:03:09,348 - #14 Alfa
INFO  04:03:09,348 - #35 ;
INFO  04:03:09,348 - #14 a2
INFO  04:03:09,349 - #32 =
INFO  04:03:09,355 - #7 new
INFO  04:03:09,357 - #14 Beta
INFO  04:03:09,357 - #35 ;
INFO  04:03:09,357 - #14 b
INFO  04:03:09,357 - #32 =
INFO  04:03:09,357 - #7 new
INFO  04:03:09,357 - #14 Alfa
INFO  04:03:09,357 - #35 ;
INFO  04:03:09,357 - #14 g
INFO  04:03:09,358 - #32 =
INFO  04:03:09,358 - #7 new
INFO  04:03:09,358 - #14 Gama
INFO  04:03:09,358 - #35 ;
INFO  04:03:09,358 - #14 d
INFO  04:03:09,358 - #32 =
INFO  04:03:09,358 - #7 new
INFO  04:03:09,358 - #14 Delta
INFO  04:03:09,358 - #35 ;
INFO  04:03:09,358 - #14 a1
INFO  04:03:09,358 - #37 .
INFO  04:03:09,359 - #14 dodaj
INFO  04:03:09,359 - #38 (
INFO  04:03:09,359 - #15 1
INFO  04:03:09,359 - #36 ,
INFO  04:03:09,359 - #14 str2
INFO  04:03:09,360 - #36 ,
INFO  04:03:09,360 - #15 3
INFO  04:03:09,360 - #39 )
INFO  04:03:09,360 - #35 ;
INFO  04:03:09,360 - #6 if
INFO  04:03:09,361 - #38 (
INFO  04:03:09,361 - #14 a1
INFO  04:03:09,361 - #24 ==
INFO  04:03:09,361 - #14 a2
INFO  04:03:09,361 - #39 )
INFO  04:03:09,361 - #8 print
INFO  04:03:09,361 - #38 (
INFO  04:03:09,362 - #18 "AlfaBeta"
INFO  04:03:09,362 - #39 )
INFO  04:03:09,362 - #35 ;
INFO  04:03:09,362 - #4 else
INFO  04:03:09,362 - #6 if
INFO  04:03:09,362 - #38 (
INFO  04:03:09,363 - #14 a1
INFO  04:03:09,363 - #26 >
INFO  04:03:09,363 - #14 a2
INFO  04:03:09,363 - #39 )
INFO  04:03:09,363 - #8 print
INFO  04:03:09,363 - #38 (
INFO  04:03:09,363 - #18 "true"
INFO  04:03:09,364 - #39 )
INFO  04:03:09,364 - #35 ;
INFO  04:03:09,364 - #4 else
INFO  04:03:09,364 - #6 if
INFO  04:03:09,364 - #38 (
INFO  04:03:09,364 - #14 g
INFO  04:03:09,364 - #25 !=
INFO  04:03:09,364 - #14 d
INFO  04:03:09,365 - #30 &&
INFO  04:03:09,365 - #14 g
INFO  04:03:09,365 - #25 !=
INFO  04:03:09,365 - #14 b
INFO  04:03:09,365 - #39 )
INFO  04:03:09,365 - #8 print
INFO  04:03:09,365 - #38 (
INFO  04:03:09,365 - #18 "false"
INFO  04:03:09,365 - #39 )
INFO  04:03:09,365 - #35 ;
INFO  04:03:09,366 - #43 }
INFO  04:03:09,366 - #43 }
INFO  04:03:09,366 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test10.mj
INFO  04:03:09,367 - #1 program
INFO  04:03:09,367 - #14 Program
INFO  04:03:09,367 - #3 class
INFO  04:03:09,367 - #14 A
INFO  04:03:09,368 - #42 {
INFO  04:03:09,368 - #14 int
INFO  04:03:09,368 - #14 x
INFO  04:03:09,368 - #40 [
INFO  04:03:09,368 - #41 ]
INFO  04:03:09,368 - #36 ,
INFO  04:03:09,368 - #14 y
INFO  04:03:09,368 - #40 [
INFO  04:03:09,368 - #41 ]
INFO  04:03:09,368 - #35 ;
INFO  04:03:09,368 - #42 {
INFO  04:03:09,368 - #14 int
INFO  04:03:09,369 - #14 pr
INFO  04:03:09,369 - #38 (
INFO  04:03:09,369 - #39 )
INFO  04:03:09,369 - #42 {
INFO  04:03:09,369 - #10 return
INFO  04:03:09,369 - #15 1
INFO  04:03:09,369 - #35 ;
INFO  04:03:09,369 - #43 }
INFO  04:03:09,369 - #14 int
INFO  04:03:09,369 - #14 pr
INFO  04:03:09,370 - #38 (
INFO  04:03:09,370 - #39 )
INFO  04:03:09,370 - #42 {
INFO  04:03:09,370 - #10 return
INFO  04:03:09,370 - #15 0
INFO  04:03:09,370 - #35 ;
INFO  04:03:09,370 - #43 }
INFO  04:03:09,370 - #14 int
INFO  04:03:09,371 - #14 pr1
INFO  04:03:09,371 - #38 (
INFO  04:03:09,371 - #39 )
INFO  04:03:09,371 - #42 {
INFO  04:03:09,371 - #10 return
INFO  04:03:09,371 - #14 pr
INFO  04:03:09,371 - #38 (
INFO  04:03:09,371 - #39 )
INFO  04:03:09,371 - #35 ;
INFO  04:03:09,372 - #43 }
INFO  04:03:09,372 - #43 }
INFO  04:03:09,372 - #43 }
INFO  04:03:09,373 - #5 const
INFO  04:03:09,374 - #14 int
INFO  04:03:09,374 - #14 pi
INFO  04:03:09,375 - #32 =
INFO  04:03:09,375 - #15 3
INFO  04:03:09,375 - #36 ,
INFO  04:03:09,375 - #14 e
INFO  04:03:09,375 - #32 =
INFO  04:03:09,375 - #15 2
INFO  04:03:09,375 - #35 ;
INFO  04:03:09,375 - #5 const
INFO  04:03:09,376 - #14 string
INFO  04:03:09,376 - #14 strin
INFO  04:03:09,376 - #32 =
INFO  04:03:09,377 - #18 "aaa"
INFO  04:03:09,377 - #35 ;
INFO  04:03:09,377 - #3 class
INFO  04:03:09,377 - #14 B
INFO  04:03:09,377 - #13 extends
INFO  04:03:09,377 - #14 A
INFO  04:03:09,378 - #42 {
INFO  04:03:09,378 - #14 int
INFO  04:03:09,378 - #14 i
INFO  04:03:09,378 - #35 ;
INFO  04:03:09,378 - #14 int
INFO  04:03:09,378 - #14 x
INFO  04:03:09,378 - #40 [
INFO  04:03:09,379 - #41 ]
INFO  04:03:09,379 - #35 ;
INFO  04:03:09,379 - #14 A
INFO  04:03:09,379 - #14 theAA
INFO  04:03:09,379 - #35 ;
INFO  04:03:09,379 - #42 {
INFO  04:03:09,379 - #11 void
INFO  04:03:09,380 - #14 voidtest
INFO  04:03:09,380 - #38 (
INFO  04:03:09,380 - #14 int
INFO  04:03:09,380 - #14 a
INFO  04:03:09,380 - #36 ,
INFO  04:03:09,380 - #14 char
INFO  04:03:09,381 - #14 b
INFO  04:03:09,381 - #39 )
INFO  04:03:09,381 - #14 int
INFO  04:03:09,381 - #14 c
INFO  04:03:09,381 - #35 ;
INFO  04:03:09,381 - #42 {
INFO  04:03:09,381 - #9 read
INFO  04:03:09,382 - #38 (
INFO  04:03:09,382 - #14 a
INFO  04:03:09,382 - #39 )
INFO  04:03:09,382 - #35 ;
INFO  04:03:09,382 - #9 read
INFO  04:03:09,382 - #38 (
INFO  04:03:09,382 - #14 b
INFO  04:03:09,383 - #39 )
INFO  04:03:09,383 - #35 ;
INFO  04:03:09,383 - #9 read
INFO  04:03:09,384 - #38 (
INFO  04:03:09,385 - #14 c
INFO  04:03:09,385 - #39 )
INFO  04:03:09,385 - #35 ;
INFO  04:03:09,386 - #43 }
INFO  04:03:09,386 - #14 int
INFO  04:03:09,386 - #14 met
INFO  04:03:09,386 - #38 (
INFO  04:03:09,386 - #14 int
INFO  04:03:09,386 - #14 a
INFO  04:03:09,386 - #39 )
INFO  04:03:09,387 - #42 {
INFO  04:03:09,387 - #10 return
INFO  04:03:09,387 - #14 a
INFO  04:03:09,387 - #19 +
INFO  04:03:09,387 - #15 1
INFO  04:03:09,387 - #35 ;
INFO  04:03:09,387 - #43 }
INFO  04:03:09,388 - #14 int
INFO  04:03:09,388 - #14 getValue
INFO  04:03:09,388 - #38 (
INFO  04:03:09,388 - #14 int
INFO  04:03:09,388 - #14 a
INFO  04:03:09,388 - #39 )
INFO  04:03:09,389 - #14 int
INFO  04:03:09,390 - #14 b
INFO  04:03:09,390 - #35 ;
INFO  04:03:09,390 - #14 bool
INFO  04:03:09,390 - #14 c
INFO  04:03:09,390 - #35 ;
INFO  04:03:09,390 - #42 {
INFO  04:03:09,390 - #14 this
INFO  04:03:09,390 - #37 .
INFO  04:03:09,391 - #14 i
INFO  04:03:09,391 - #32 =
INFO  04:03:09,391 - #15 6
INFO  04:03:09,391 - #35 ;
INFO  04:03:09,391 - #10 return
INFO  04:03:09,391 - #14 this
INFO  04:03:09,391 - #37 .
INFO  04:03:09,391 - #14 i
INFO  04:03:09,391 - #19 +
INFO  04:03:09,392 - #14 this
INFO  04:03:09,392 - #37 .
INFO  04:03:09,392 - #14 x
INFO  04:03:09,392 - #40 [
INFO  04:03:09,392 - #15 0
INFO  04:03:09,393 - #41 ]
INFO  04:03:09,393 - #19 +
INFO  04:03:09,393 - #14 this
INFO  04:03:09,393 - #37 .
INFO  04:03:09,393 - #14 met
INFO  04:03:09,393 - #38 (
INFO  04:03:09,393 - #14 a
INFO  04:03:09,394 - #39 )
INFO  04:03:09,394 - #35 ;
INFO  04:03:09,394 - #43 }
INFO  04:03:09,394 - #43 }
INFO  04:03:09,394 - #43 }
INFO  04:03:09,395 - #3 class
INFO  04:03:09,395 - #14 C
INFO  04:03:09,395 - #13 extends
INFO  04:03:09,395 - #14 B
INFO  04:03:09,395 - #42 {
INFO  04:03:09,395 - #14 A
INFO  04:03:09,396 - #14 theA
INFO  04:03:09,396 - #35 ;
INFO  04:03:09,396 - #14 string
INFO  04:03:09,396 - #14 a
INFO  04:03:09,396 - #32 =
INFO  04:03:09,396 - #18 "bas je roze i zut"
INFO  04:03:09,396 - #35 ;
INFO  04:03:09,397 - #42 {
INFO  04:03:09,397 - #11 void
INFO  04:03:09,397 - #14 glupost
INFO  04:03:09,397 - #38 (
INFO  04:03:09,397 - #14 int
INFO  04:03:09,397 - #36 ,
INFO  04:03:09,397 - #14 m
INFO  04:03:09,397 - #39 )
INFO  04:03:09,398 - #14 int
INFO  04:03:09,398 - #14 i
INFO  04:03:09,398 - #36 ,
INFO  04:03:09,398 - #14 bool
INFO  04:03:09,398 - #14 c
INFO  04:03:09,398 - #42 {
INFO  04:03:09,398 - #10 return
INFO  04:03:09,399 - #14 i
INFO  04:03:09,399 - #19 +
INFO  04:03:09,399 - #14 c
INFO  04:03:09,399 - #35 ;
INFO  04:03:09,399 - #43 }
INFO  04:03:09,399 - #43 }
INFO  04:03:09,399 - #43 }
INFO  04:03:09,399 - #3 class
INFO  04:03:09,400 - #14 E
INFO  04:03:09,400 - #13 extends
INFO  04:03:09,400 - #42 {
INFO  04:03:09,400 - #14 bool
INFO  04:03:09,400 - #14 b
INFO  04:03:09,400 - #35 ;
INFO  04:03:09,400 - #14 C
INFO  04:03:09,400 - #36 ,
INFO  04:03:09,400 - #14 cc
INFO  04:03:09,400 - #36 ,
INFO  04:03:09,401 - #14 char
INFO  04:03:09,401 - #14 e
INFO  04:03:09,401 - #35 ;
INFO  04:03:09,401 - #43 }
INFO  04:03:09,401 - #42 {
INFO  04:03:09,401 - #14 int
INFO  04:03:09,401 - #14 met
INFO  04:03:09,401 - #38 (
INFO  04:03:09,401 - #14 int
INFO  04:03:09,401 - #14 par
INFO  04:03:09,402 - #39 )
INFO  04:03:09,402 - #42 {
INFO  04:03:09,402 - #10 return
INFO  04:03:09,402 - #14 par
INFO  04:03:09,402 - #20 -
INFO  04:03:09,402 - #15 1
INFO  04:03:09,402 - #35 ;
INFO  04:03:09,402 - #43 }
INFO  04:03:09,402 - #14 string
INFO  04:03:09,402 - #14 strfunc
INFO  04:03:09,403 - #38 (
INFO  04:03:09,403 - #14 string
INFO  04:03:09,403 - #14 s
INFO  04:03:09,403 - #39 )
INFO  04:03:09,403 - #42 {
INFO  04:03:09,403 - #10 return
INFO  04:03:09,403 - #14 s
INFO  04:03:09,404 - #19 +
INFO  04:03:09,404 - #18 "aa"
INFO  04:03:09,404 - #35 ;
INFO  04:03:09,405 - #43 }
INFO  04:03:09,405 - #11 void
INFO  04:03:09,405 - #14 main
INFO  04:03:09,405 - #38 (
INFO  04:03:09,405 - #39 )
INFO  04:03:09,406 - #14 A
INFO  04:03:09,407 - #14 a
INFO  04:03:09,407 - #35 ;
INFO  04:03:09,407 - #14 B
INFO  04:03:09,407 - #14 b
INFO  04:03:09,408 - #35 ;
INFO  04:03:09,408 - #14 C
INFO  04:03:09,408 - #14 c
INFO  04:03:09,408 - #35 ;
INFO  04:03:09,408 - #14 int
INFO  04:03:09,409 - #14 i
INFO  04:03:09,409 - #36 ,
INFO  04:03:09,409 - #14 y
INFO  04:03:09,409 - #36 ,
INFO  04:03:09,409 - #14 z
INFO  04:03:09,409 - #35 ;
INFO  04:03:09,410 - #14 int
INFO  04:03:09,410 - #14 x
INFO  04:03:09,410 - #40 [
INFO  04:03:09,411 - #41 ]
INFO  04:03:09,411 - #35 ;
INFO  04:03:09,411 - #14 string
INFO  04:03:09,411 - #14 str1
INFO  04:03:09,411 - #36 ,
INFO  04:03:09,412 - #14 str2
INFO  04:03:09,412 - #35 ;
INFO  04:03:09,412 - #14 bool
INFO  04:03:09,412 - #14 bulin
INFO  04:03:09,412 - #35 ;
INFO  04:03:09,412 - #42 {
INFO  04:03:09,412 - #14 str2
INFO  04:03:09,413 - #32 =
INFO  04:03:09,413 - #18 "abcd"
INFO  04:03:09,413 - #35 ;
INFO  04:03:09,413 - #14 str1
INFO  04:03:09,413 - #32 =
INFO  04:03:09,414 - #18 "abc"
INFO  04:03:09,414 - #19 +
INFO  04:03:09,414 - #14 strfunc
INFO  04:03:09,414 - #38 (
INFO  04:03:09,414 - #14 str2
INFO  04:03:09,414 - #39 )
INFO  04:03:09,414 - #35 ;
INFO  04:03:09,415 - #14 str2
INFO  04:03:09,415 - #32 =
INFO  04:03:09,415 - #18 "mama"
INFO  04:03:09,415 - #19 +
INFO  04:03:09,415 - #18 "tata"
INFO  04:03:09,416 - #35 ;
INFO  04:03:09,416 - #14 strin
INFO  04:03:09,416 - #32 =
INFO  04:03:09,416 - #18 "ne moze se dodeliti vrednost konstantnom stringu"
INFO  04:03:09,424 - #35 ;
INFO  04:03:09,424 - #14 bulin
INFO  04:03:09,424 - #32 =
INFO  04:03:09,425 - #20 -
INFO  04:03:09,425 - #17 true
INFO  04:03:09,425 - #35 ;
INFO  04:03:09,425 - #8 print
INFO  04:03:09,425 - #38 (
INFO  04:03:09,425 - #14 bulin
INFO  04:03:09,425 - #39 )
INFO  04:03:09,425 - #35 ;
INFO  04:03:09,426 - #14 a
INFO  04:03:09,426 - #32 =
INFO  04:03:09,426 - #7 new
INFO  04:03:09,426 - #14 A
INFO  04:03:09,426 - #35 ;
INFO  04:03:09,427 - #14 a
INFO  04:03:09,427 - #37 .
INFO  04:03:09,427 - #14 x
INFO  04:03:09,427 - #32 =
INFO  04:03:09,427 - #7 new
INFO  04:03:09,427 - #14 int
INFO  04:03:09,427 - #40 [
INFO  04:03:09,427 - #15 5
INFO  04:03:09,427 - #41 ]
INFO  04:03:09,427 - #35 ;
INFO  04:03:09,428 - #14 a
INFO  04:03:09,428 - #37 .
INFO  04:03:09,428 - #14 y
INFO  04:03:09,428 - #32 =
INFO  04:03:09,428 - #7 new
INFO  04:03:09,428 - #14 int
INFO  04:03:09,428 - #40 [
INFO  04:03:09,428 - #15 5
INFO  04:03:09,428 - #41 ]
INFO  04:03:09,428 - #35 ;
INFO  04:03:09,428 - #14 c
INFO  04:03:09,429 - #32 =
INFO  04:03:09,429 - #7 new
INFO  04:03:09,429 - #14 C
INFO  04:03:09,429 - #35 ;
INFO  04:03:09,429 - #14 i
INFO  04:03:09,429 - #32 =
INFO  04:03:09,429 - #14 met
INFO  04:03:09,430 - #38 (
INFO  04:03:09,430 - #14 pi
INFO  04:03:09,430 - #19 +
INFO  04:03:09,430 - #15 3
INFO  04:03:09,430 - #39 )
INFO  04:03:09,430 - #19 +
INFO  04:03:09,430 - #14 e
INFO  04:03:09,430 - #21 *
INFO  04:03:09,431 - #15 2
INFO  04:03:09,431 - #35 ;
INFO  04:03:09,431 - #14 c
INFO  04:03:09,431 - #37 .
INFO  04:03:09,431 - #14 theA
INFO  04:03:09,431 - #32 =
INFO  04:03:09,431 - #14 a
INFO  04:03:09,431 - #35 ;
INFO  04:03:09,431 - #14 c
INFO  04:03:09,432 - #37 .
INFO  04:03:09,432 - #14 x
INFO  04:03:09,432 - #32 =
INFO  04:03:09,432 - #7 new
INFO  04:03:09,432 - #14 int
INFO  04:03:09,432 - #40 [
INFO  04:03:09,432 - #15 5
INFO  04:03:09,432 - #41 ]
INFO  04:03:09,433 - #35 ;
INFO  04:03:09,433 - #14 x
INFO  04:03:09,433 - #32 =
INFO  04:03:09,433 - #7 new
INFO  04:03:09,433 - #14 int
INFO  04:03:09,433 - #40 [
INFO  04:03:09,433 - #15 3
INFO  04:03:09,434 - #41 ]
INFO  04:03:09,434 - #35 ;
INFO  04:03:09,434 - #14 i
INFO  04:03:09,434 - #32 =
INFO  04:03:09,434 - #15 0
INFO  04:03:09,434 - #35 ;
INFO  04:03:09,434 - #9 read
INFO  04:03:09,435 - #38 (
INFO  04:03:09,435 - #14 c
INFO  04:03:09,435 - #37 .
INFO  04:03:09,435 - #14 i
INFO  04:03:09,435 - #39 )
INFO  04:03:09,435 - #35 ;
INFO  04:03:09,435 - #12 while
INFO  04:03:09,435 - #38 (
INFO  04:03:09,435 - #14 i
INFO  04:03:09,435 - #28 <
INFO  04:03:09,435 - #15 5
INFO  04:03:09,435 - #39 )
INFO  04:03:09,436 - #42 {
INFO  04:03:09,436 - #9 read
INFO  04:03:09,436 - #38 (
INFO  04:03:09,436 - #14 c
INFO  04:03:09,436 - #37 .
INFO  04:03:09,436 - #14 x
INFO  04:03:09,436 - #40 [
INFO  04:03:09,436 - #14 i
INFO  04:03:09,436 - #41 ]
INFO  04:03:09,436 - #39 )
INFO  04:03:09,436 - #35 ;
INFO  04:03:09,436 - #9 read
INFO  04:03:09,436 - #38 (
INFO  04:03:09,437 - #14 c
INFO  04:03:09,437 - #37 .
INFO  04:03:09,437 - #14 theA
INFO  04:03:09,437 - #37 .
INFO  04:03:09,437 - #14 x
INFO  04:03:09,437 - #40 [
INFO  04:03:09,437 - #14 i
INFO  04:03:09,437 - #41 ]
INFO  04:03:09,437 - #39 )
INFO  04:03:09,437 - #35 ;
INFO  04:03:09,438 - #14 i
INFO  04:03:09,438 - #33 ++
INFO  04:03:09,438 - #35 ;
INFO  04:03:09,438 - #43 }
INFO  04:03:09,438 - #8 print
INFO  04:03:09,438 - #38 (
INFO  04:03:09,438 - #14 c
INFO  04:03:09,438 - #37 .
INFO  04:03:09,438 - #14 getValue
INFO  04:03:09,438 - #38 (
INFO  04:03:09,438 - #14 c
INFO  04:03:09,438 - #37 .
INFO  04:03:09,439 - #14 theA
INFO  04:03:09,439 - #37 .
INFO  04:03:09,439 - #14 x
INFO  04:03:09,440 - #40 [
INFO  04:03:09,440 - #15 0
INFO  04:03:09,440 - #41 ]
INFO  04:03:09,440 - #39 )
INFO  04:03:09,440 - #39 )
INFO  04:03:09,441 - #35 ;
INFO  04:03:09,441 - #14 c
INFO  04:03:09,441 - #37 .
INFO  04:03:09,441 - #14 theA
INFO  04:03:09,441 - #37 .
INFO  04:03:09,441 - #14 x
INFO  04:03:09,441 - #40 [
INFO  04:03:09,441 - #15 0
INFO  04:03:09,442 - #41 ]
INFO  04:03:09,442 - #32 =
INFO  04:03:09,442 - #15 1
INFO  04:03:09,442 - #35 ;
INFO  04:03:09,442 - #6 if
INFO  04:03:09,442 - #38 (
INFO  04:03:09,442 - #14 i
INFO  04:03:09,442 - #24 ==
INFO  04:03:09,443 - #15 1
INFO  04:03:09,443 - #39 )
INFO  04:03:09,444 - #14 i
INFO  04:03:09,444 - #32 =
INFO  04:03:09,444 - #14 c
INFO  04:03:09,445 - #37 .
INFO  04:03:09,445 - #14 met
INFO  04:03:09,445 - #38 (
INFO  04:03:09,445 - #15 1
INFO  04:03:09,445 - #39 )
INFO  04:03:09,445 - #19 +
INFO  04:03:09,445 - #14 b
INFO  04:03:09,445 - #37 .
INFO  04:03:09,446 - #14 getValue
INFO  04:03:09,446 - #38 (
INFO  04:03:09,446 - #14 c
INFO  04:03:09,446 - #37 .
INFO  04:03:09,446 - #14 x
INFO  04:03:09,446 - #40 [
INFO  04:03:09,446 - #15 0
INFO  04:03:09,447 - #41 ]
INFO  04:03:09,447 - #39 )
INFO  04:03:09,447 - #19 +
INFO  04:03:09,447 - #15 5
INFO  04:03:09,447 - #21 *
INFO  04:03:09,447 - #15 8
INFO  04:03:09,447 - #35 ;
INFO  04:03:09,448 - #14 b
INFO  04:03:09,448 - #37 .
INFO  04:03:09,448 - #14 getValue
INFO  04:03:09,448 - #38 (
INFO  04:03:09,448 - #14 b
INFO  04:03:09,448 - #37 .
INFO  04:03:09,448 - #14 y
INFO  04:03:09,448 - #40 [
INFO  04:03:09,449 - #14 i
INFO  04:03:09,449 - #41 ]
INFO  04:03:09,449 - #39 )
INFO  04:03:09,449 - #35 ;
INFO  04:03:09,449 - #14 b
INFO  04:03:09,449 - #37 .
INFO  04:03:09,449 - #14 pr
INFO  04:03:09,449 - #38 (
INFO  04:03:09,450 - #39 )
INFO  04:03:09,450 - #35 ;
INFO  04:03:09,450 - #14 i
INFO  04:03:09,450 - #32 =
INFO  04:03:09,450 - #15 4
INFO  04:03:09,450 - #21 *
INFO  04:03:09,450 - #38 (
INFO  04:03:09,451 - #15 5
INFO  04:03:09,451 - #19 +
INFO  04:03:09,451 - #15 6
INFO  04:03:09,451 - #19 +
INFO  04:03:09,451 - #14 i
INFO  04:03:09,451 - #39 )
INFO  04:03:09,451 - #19 +
INFO  04:03:09,451 - #14 i
INFO  04:03:09,451 - #19 +
INFO  04:03:09,451 - #14 met
INFO  04:03:09,452 - #38 (
INFO  04:03:09,452 - #15 2
INFO  04:03:09,452 - #39 )
INFO  04:03:09,452 - #35 ;
INFO  04:03:09,452 - #14 chr
INFO  04:03:09,452 - #38 (
INFO  04:03:09,452 - #15 1
INFO  04:03:09,453 - #39 )
INFO  04:03:09,454 - #35 ;
INFO  04:03:09,454 - #14 i
INFO  04:03:09,454 - #32 =
INFO  04:03:09,454 - #14 ord
INFO  04:03:09,455 - #38 (
INFO  04:03:09,455 - #15 1
INFO  04:03:09,456 - #39 )
INFO  04:03:09,456 - #35 ;
INFO  04:03:09,457 - #8 print
INFO  04:03:09,457 - #38 (
INFO  04:03:09,457 - #15 4
INFO  04:03:09,457 - #36 ,
INFO  04:03:09,457 - #15 1
INFO  04:03:09,457 - #39 )
INFO  04:03:09,457 - #35 ;
INFO  04:03:09,458 - #14 a
INFO  04:03:09,458 - #32 =
INFO  04:03:09,458 - #14 b
INFO  04:03:09,458 - #35 ;
INFO  04:03:09,458 - #6 if
INFO  04:03:09,458 - #38 (
INFO  04:03:09,458 - #17 true
INFO  04:03:09,458 - #39 )
INFO  04:03:09,458 - #14 i
INFO  04:03:09,458 - #33 ++
INFO  04:03:09,458 - #35 ;
INFO  04:03:09,458 - #12 while
INFO  04:03:09,459 - #38 (
INFO  04:03:09,459 - #14 str2
INFO  04:03:09,459 - #24 ==
INFO  04:03:09,459 - #18 "kraj"
INFO  04:03:09,459 - #31 ||
INFO  04:03:09,459 - #14 str1
INFO  04:03:09,459 - #24 ==
INFO  04:03:09,459 - #18 "kraj"
INFO  04:03:09,460 - #39 )
INFO  04:03:09,460 - #42 {
INFO  04:03:09,460 - #14 c
INFO  04:03:09,460 - #37 .
INFO  04:03:09,460 - #14 theA
INFO  04:03:09,460 - #37 .
INFO  04:03:09,460 - #14 x
INFO  04:03:09,461 - #40 [
INFO  04:03:09,461 - #14 i
INFO  04:03:09,461 - #41 ]
INFO  04:03:09,461 - #32 =
INFO  04:03:09,461 - #14 a
INFO  04:03:09,461 - #37 .
INFO  04:03:09,461 - #14 x
INFO  04:03:09,461 - #40 [
INFO  04:03:09,461 - #14 i
INFO  04:03:09,461 - #41 ]
INFO  04:03:09,461 - #35 ;
INFO  04:03:09,461 - #6 if
INFO  04:03:09,462 - #38 (
INFO  04:03:09,462 - #14 b
INFO  04:03:09,462 - #37 .
INFO  04:03:09,462 - #14 theAA
INFO  04:03:09,462 - #37 .
INFO  04:03:09,462 - #14 y
INFO  04:03:09,462 - #40 [
INFO  04:03:09,462 - #14 i
INFO  04:03:09,462 - #41 ]
INFO  04:03:09,462 - #24 ==
INFO  04:03:09,462 - #14 c
INFO  04:03:09,462 - #37 .
INFO  04:03:09,463 - #14 theA
INFO  04:03:09,463 - #37 .
INFO  04:03:09,463 - #14 x
INFO  04:03:09,463 - #40 [
INFO  04:03:09,463 - #14 i
INFO  04:03:09,463 - #41 ]
INFO  04:03:09,463 - #30 &&
INFO  04:03:09,463 - #14 c
INFO  04:03:09,463 - #37 .
INFO  04:03:09,464 - #14 pr1
INFO  04:03:09,464 - #38 (
INFO  04:03:09,464 - #39 )
INFO  04:03:09,464 - #39 )
INFO  04:03:09,464 - #2 break
INFO  04:03:09,464 - #35 ;
INFO  04:03:09,464 - #9 read
INFO  04:03:09,464 - #38 (
INFO  04:03:09,464 - #14 str1
INFO  04:03:09,465 - #39 )
INFO  04:03:09,465 - #35 ;
INFO  04:03:09,465 - #9 read
INFO  04:03:09,465 - #38 (
INFO  04:03:09,465 - #14 str2
INFO  04:03:09,465 - #39 )
INFO  04:03:09,465 - #35 ;
INFO  04:03:09,465 - #43 }
INFO  04:03:09,465 - #43 }
INFO  04:03:09,465 - #43 }
