INFO  03:55:40,021 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test00.mj
INFO  03:55:40,031 - #1 program
INFO  03:55:40,031 - #14 MJProgram
INFO  03:55:40,031 - #14 int
INFO  03:55:40,032 - #14 x
INFO  03:55:40,032 - #36 ,
INFO  03:55:40,032 - #14 y
INFO  03:55:40,032 - #35 ;
INFO  03:55:40,032 - #42 {
INFO  03:55:40,032 - #11 void
INFO  03:55:40,034 - #14 main
INFO  03:55:40,034 - #38 (
INFO  03:55:40,034 - #39 )
INFO  03:55:40,034 - #42 {
INFO  03:55:40,035 - #43 }
INFO  03:55:40,035 - #43 }
INFO  03:56:53,350 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test01.mj
INFO  03:56:53,352 - #1 program
INFO  03:56:53,352 - #14 Prilepi
INFO  03:56:53,352 - #14 int
INFO  03:56:53,353 - #14 a
INFO  03:56:53,357 - #36 ,
INFO  03:56:53,358 - #14 b
INFO  03:56:53,358 - #35 ;
INFO  03:56:53,358 - #14 int
INFO  03:56:53,358 - #14 manji
INFO  03:56:53,358 - #36 ,
INFO  03:56:53,359 - #14 veci
INFO  03:56:53,359 - #36 ,
INFO  03:56:53,360 - #14 step
INFO  03:56:53,360 - #36 ,
INFO  03:56:53,360 - #14 pom
INFO  03:56:53,360 - #36 ,
INFO  03:56:53,360 - #14 novi
INFO  03:56:53,361 - #35 ;
INFO  03:56:53,361 - #5 const
INFO  03:56:53,361 - #14 int
INFO  03:56:53,362 - #14 x
INFO  03:56:53,362 - #32 =
INFO  03:56:53,362 - #15 10
INFO  03:56:53,362 - #35 ;
INFO  03:56:53,363 - #42 {
INFO  03:56:53,363 - #11 void
INFO  03:56:53,363 - #14 main
INFO  03:56:53,363 - #38 (
INFO  03:56:53,363 - #39 )
INFO  03:56:53,364 - #42 {
INFO  03:56:53,364 - #9 read
INFO  03:56:53,365 - #38 (
INFO  03:56:53,366 - #14 a
INFO  03:56:53,366 - #39 )
INFO  03:56:53,366 - #35 ;
INFO  03:56:53,367 - #9 read
INFO  03:56:53,367 - #38 (
INFO  03:56:53,367 - #14 b
INFO  03:56:53,367 - #39 )
INFO  03:56:53,367 - #35 ;
INFO  03:56:53,368 - #14 novi
INFO  03:56:53,368 - #32 =
INFO  03:56:53,368 - #15 0
INFO  03:56:53,368 - #35 ;
INFO  03:56:53,370 - #6 if
INFO  03:56:53,370 - #38 (
INFO  03:56:53,370 - #14 a
INFO  03:56:53,370 - #28 <
INFO  03:56:53,370 - #14 b
INFO  03:56:53,371 - #39 )
INFO  03:56:53,371 - #42 {
INFO  03:56:53,371 - #14 manji
INFO  03:56:53,371 - #32 =
INFO  03:56:53,372 - #14 a
INFO  03:56:53,380 - #35 ;
INFO  03:56:53,380 - #14 veci
INFO  03:56:53,382 - #32 =
INFO  03:56:53,383 - #14 b
INFO  03:56:53,383 - #35 ;
INFO  03:56:53,383 - #43 }
INFO  03:56:53,383 - #4 else
INFO  03:56:53,383 - #42 {
INFO  03:56:53,384 - #14 manji
INFO  03:56:53,384 - #32 =
INFO  03:56:53,384 - #14 b
INFO  03:56:53,384 - #35 ;
INFO  03:56:53,384 - #14 veci
INFO  03:56:53,385 - #32 =
INFO  03:56:53,385 - #14 a
INFO  03:56:53,385 - #35 ;
INFO  03:56:53,385 - #43 }
INFO  03:56:53,385 - #14 pom
INFO  03:56:53,385 - #32 =
INFO  03:56:53,386 - #14 manji
INFO  03:56:53,386 - #35 ;
INFO  03:56:53,387 - #12 while
INFO  03:56:53,387 - #38 (
INFO  03:56:53,387 - #14 pom
INFO  03:56:53,387 - #26 >
INFO  03:56:53,387 - #15 0
INFO  03:56:53,387 - #39 )
INFO  03:56:53,388 - #42 {
INFO  03:56:53,388 - #14 pom
INFO  03:56:53,388 - #32 =
INFO  03:56:53,388 - #14 pom
INFO  03:56:53,389 - #22 /
INFO  03:56:53,389 - #14 x
INFO  03:56:53,389 - #35 ;
INFO  03:56:53,389 - #14 step
INFO  03:56:53,390 - #32 =
INFO  03:56:53,390 - #14 step
INFO  03:56:53,390 - #21 *
INFO  03:56:53,390 - #14 x
INFO  03:56:53,390 - #35 ;
INFO  03:56:53,391 - #43 }
INFO  03:56:53,391 - #14 novi
INFO  03:56:53,391 - #32 =
INFO  03:56:53,391 - #14 veci
INFO  03:56:53,392 - #21 *
INFO  03:56:53,392 - #14 step
INFO  03:56:53,392 - #19 +
INFO  03:56:53,392 - #14 manji
INFO  03:56:53,392 - #35 ;
INFO  03:56:53,392 - #43 }
INFO  03:56:53,393 - #43 }
INFO  03:57:22,694 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test02.mj
INFO  03:57:22,696 - #1 program
INFO  03:57:22,696 - #14 MaxCifra
INFO  03:57:22,696 - #5 const
INFO  03:57:22,696 - #14 x
INFO  03:57:22,696 - #35 ;
INFO  03:57:22,696 - #14 int
INFO  03:57:22,697 - #14 a
INFO  03:57:22,697 - #36 ,
INFO  03:57:22,697 - #14 c
INFO  03:57:22,697 - #36 ,
INFO  03:57:22,698 - #14 maxcif
INFO  03:57:22,698 - #35 ;
INFO  03:57:22,698 - #14 char
INFO  03:57:22,698 - #14 e
INFO  03:57:22,698 - #32 =
INFO  03:57:22,701 - #15 2
INFO  03:57:22,701 - #35 ;
INFO  03:57:22,701 - #14 int
INFO  03:57:22,702 - #14 c
INFO  03:57:22,702 - #35 ;
INFO  03:57:22,702 - #42 {
INFO  03:57:22,702 - #11 void
INFO  03:57:22,703 - #14 main
INFO  03:57:22,703 - #38 (
INFO  03:57:22,711 - #39 )
INFO  03:57:22,711 - #14 char
INFO  03:57:22,711 - #14 a
INFO  03:57:22,712 - #35 ;
INFO  03:57:22,712 - #14 int
INFO  03:57:22,712 - #14 z
INFO  03:57:22,712 - #32 =
INFO  03:57:22,713 - #15 0
INFO  03:57:22,714 - #42 {
INFO  03:57:22,714 - #9 read
INFO  03:57:22,714 - #38 (
INFO  03:57:22,715 - #14 a
INFO  03:57:22,715 - #39 )
INFO  03:57:22,716 - #35 ;
INFO  03:57:22,716 - #14 maxcif
INFO  03:57:22,716 - #32 =
INFO  03:57:22,716 - #15 0
INFO  03:57:22,716 - #35 ;
INFO  03:57:22,716 - #12 while
INFO  03:57:22,717 - #38 (
INFO  03:57:22,717 - #14 a
INFO  03:57:22,717 - #25 !=
INFO  03:57:22,717 - #15 0
INFO  03:57:22,718 - #39 )
INFO  03:57:22,718 - #42 {
INFO  03:57:22,719 - #14 c
INFO  03:57:22,719 - #32 =
INFO  03:57:22,719 - #14 a
INFO  03:57:22,719 - #23 %
INFO  03:57:22,720 - #15 10
INFO  03:57:22,720 - #35 ;
INFO  03:57:22,721 - #6 if
INFO  03:57:22,722 - #38 (
INFO  03:57:22,722 - #14 maxcif
INFO  03:57:22,722 - #28 <
INFO  03:57:22,722 - #26 >
INFO  03:57:22,722 - #14 c
INFO  03:57:22,722 - #39 )
INFO  03:57:22,722 - #14 maxcif
INFO  03:57:22,723 - #32 =
INFO  03:57:22,723 - #14 c
INFO  03:57:22,723 - #35 ;
INFO  03:57:22,723 - #14 a
INFO  03:57:22,723 - #32 =
INFO  03:57:22,723 - #14 a
INFO  03:57:22,724 - #22 /
INFO  03:57:22,725 - #15 10
INFO  03:57:22,725 - #35 ;
INFO  03:57:22,725 - #43 }
INFO  03:57:22,725 - #9 read
INFO  03:57:22,725 - #38 (
INFO  03:57:22,725 - #14 x
INFO  03:57:22,726 - #39 )
INFO  03:57:22,726 - #35 ;
INFO  03:57:22,726 - #14 x
INFO  03:57:22,726 - #33 ++
INFO  03:57:22,726 - #35 ;
INFO  03:57:22,726 - #8 print
INFO  03:57:22,727 - #38 (
INFO  03:57:22,727 - #14 max
INFO  03:57:22,727 - #39 )
INFO  03:57:22,727 - #35 ;
INFO  03:57:22,727 - #43 }
INFO  03:57:22,727 - #43 }
INFO  04:00:05,581 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test03.mj
INFO  04:00:05,601 - #1 program
INFO  04:00:05,601 - #14 test03
INFO  04:00:05,602 - #5 const
INFO  04:00:05,602 - #14 int
INFO  04:00:05,602 - #14 a
INFO  04:00:05,602 - #32 =
INFO  04:00:05,602 - #15 3
INFO  04:00:05,604 - #35 ;
INFO  04:00:05,606 - #14 int
INFO  04:00:05,607 - #14 x
INFO  04:00:05,607 - #36 ,
INFO  04:00:05,607 - #14 y
INFO  04:00:05,608 - #35 ;
INFO  04:00:05,608 - #14 char
INFO  04:00:05,608 - #14 z
INFO  04:00:05,608 - #35 ;
INFO  04:00:05,608 - #42 {
INFO  04:00:05,609 - #11 void
INFO  04:00:05,609 - #14 main
INFO  04:00:05,609 - #38 (
INFO  04:00:05,609 - #39 )
INFO  04:00:05,609 - #42 {
INFO  04:00:05,609 - #9 read
INFO  04:00:05,610 - #38 (
INFO  04:00:05,610 - #14 a
INFO  04:00:05,610 - #39 )
INFO  04:00:05,610 - #35 ;
INFO  04:00:05,610 - #14 a
INFO  04:00:05,611 - #32 =
INFO  04:00:05,611 - #15 5
INFO  04:00:05,611 - #35 ;
INFO  04:00:05,611 - #14 x
INFO  04:00:05,611 - #32 =
INFO  04:00:05,611 - #15 1
INFO  04:00:05,612 - #35 ;
INFO  04:00:05,612 - #14 y
INFO  04:00:05,612 - #32 =
INFO  04:00:05,612 - #15 3
INFO  04:00:05,612 - #35 ;
INFO  04:00:05,613 - #14 z
INFO  04:00:05,613 - #32 =
INFO  04:00:05,613 - #16 'b'
INFO  04:00:05,613 - #35 ;
INFO  04:00:05,614 - #12 while
INFO  04:00:05,614 - #38 (
INFO  04:00:05,614 - #14 z
INFO  04:00:05,614 - #28 <
INFO  04:00:05,614 - #14 a
INFO  04:00:05,614 - #39 )
INFO  04:00:05,614 - #42 {
INFO  04:00:05,615 - #14 z
INFO  04:00:05,615 - #32 =
INFO  04:00:05,615 - #14 y
INFO  04:00:05,616 - #19 +
INFO  04:00:05,616 - #14 x
INFO  04:00:05,616 - #35 ;
INFO  04:00:05,616 - #14 x
INFO  04:00:05,616 - #32 =
INFO  04:00:05,616 - #14 x
INFO  04:00:05,617 - #19 +
INFO  04:00:05,617 - #15 1
INFO  04:00:05,617 - #35 ;
INFO  04:00:05,617 - #43 }
INFO  04:00:05,617 - #2 break
INFO  04:00:05,618 - #35 ;
INFO  04:00:05,618 - #43 }
INFO  04:00:05,618 - #43 }
INFO  04:00:05,618 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test04.mj
INFO  04:00:05,620 - #1 program
INFO  04:00:05,621 - #14 test04
INFO  04:00:05,621 - #5 const
INFO  04:00:05,621 - #14 string
INFO  04:00:05,621 - #14 sa
INFO  04:00:05,621 - #32 =
INFO  04:00:05,621 - #18 "nesto"
INFO  04:00:05,622 - #35 ;
INFO  04:00:05,622 - #14 string
INFO  04:00:05,622 - #14 sb
INFO  04:00:05,622 - #35 ;
INFO  04:00:05,622 - #14 int
INFO  04:00:05,622 - #14 x
INFO  04:00:05,623 - #36 ,
INFO  04:00:05,623 - #14 y
INFO  04:00:05,623 - #35 ;
INFO  04:00:05,623 - #14 int
INFO  04:00:05,623 - #14 a
INFO  04:00:05,624 - #40 [
INFO  04:00:05,624 - #41 ]
INFO  04:00:05,624 - #35 ;
INFO  04:00:05,624 - #14 bool
INFO  04:00:05,624 - #14 log
INFO  04:00:05,624 - #35 ;
INFO  04:00:05,624 - #42 {
INFO  04:00:05,625 - #14 int
INFO  04:00:05,625 - #14 sum
INFO  04:00:05,625 - #38 (
INFO  04:00:05,625 - #14 int
INFO  04:00:05,625 - #14 z
INFO  04:00:05,626 - #36 ,
INFO  04:00:05,626 - #14 int
INFO  04:00:05,626 - #14 d
INFO  04:00:05,626 - #39 )
INFO  04:00:05,626 - #42 {
INFO  04:00:05,626 - #10 return
INFO  04:00:05,626 - #14 z
INFO  04:00:05,627 - #19 +
INFO  04:00:05,627 - #14 d
INFO  04:00:05,627 - #35 ;
INFO  04:00:05,627 - #43 }
INFO  04:00:05,627 - #11 void
INFO  04:00:05,627 - #14 main
INFO  04:00:05,627 - #38 (
INFO  04:00:05,628 - #39 )
INFO  04:00:05,628 - #42 {
INFO  04:00:05,628 - #9 read
INFO  04:00:05,628 - #38 (
INFO  04:00:05,628 - #14 sb
INFO  04:00:05,628 - #39 )
INFO  04:00:05,628 - #35 ;
INFO  04:00:05,629 - #14 sb
INFO  04:00:05,629 - #32 =
INFO  04:00:05,629 - #14 sb
INFO  04:00:05,629 - #19 +
INFO  04:00:05,629 - #14 sa
INFO  04:00:05,629 - #35 ;
INFO  04:00:05,629 - #14 a
INFO  04:00:05,630 - #32 =
INFO  04:00:05,630 - #7 new
INFO  04:00:05,630 - #14 int
INFO  04:00:05,630 - #40 [
INFO  04:00:05,630 - #15 5
INFO  04:00:05,630 - #41 ]
INFO  04:00:05,630 - #35 ;
INFO  04:00:05,631 - #14 log
INFO  04:00:05,631 - #32 =
INFO  04:00:05,631 - #17 true
INFO  04:00:05,631 - #35 ;
INFO  04:00:05,631 - #14 x
INFO  04:00:05,631 - #32 =
INFO  04:00:05,631 - #15 0
INFO  04:00:05,632 - #35 ;
INFO  04:00:05,632 - #14 y
INFO  04:00:05,632 - #32 =
INFO  04:00:05,632 - #15 3
INFO  04:00:05,632 - #35 ;
INFO  04:00:05,632 - #12 while
INFO  04:00:05,632 - #38 (
INFO  04:00:05,632 - #14 log
INFO  04:00:05,633 - #39 )
INFO  04:00:05,633 - #42 {
INFO  04:00:05,633 - #14 a
INFO  04:00:05,633 - #40 [
INFO  04:00:05,633 - #14 x
INFO  04:00:05,633 - #41 ]
INFO  04:00:05,633 - #32 =
INFO  04:00:05,633 - #14 sum
INFO  04:00:05,633 - #38 (
INFO  04:00:05,634 - #14 y
INFO  04:00:05,634 - #36 ,
INFO  04:00:05,634 - #14 x
INFO  04:00:05,634 - #39 )
INFO  04:00:05,634 - #19 +
INFO  04:00:05,634 - #15 1
INFO  04:00:05,634 - #35 ;
INFO  04:00:05,634 - #14 x
INFO  04:00:05,635 - #32 =
INFO  04:00:05,635 - #14 sum
INFO  04:00:05,635 - #38 (
INFO  04:00:05,635 - #14 x
INFO  04:00:05,635 - #36 ,
INFO  04:00:05,635 - #15 1
INFO  04:00:05,635 - #39 )
INFO  04:00:05,636 - #35 ;
INFO  04:00:05,636 - #6 if
INFO  04:00:05,637 - #38 (
INFO  04:00:05,637 - #14 x
INFO  04:00:05,637 - #24 ==
INFO  04:00:05,638 - #15 5
INFO  04:00:05,638 - #39 )
INFO  04:00:05,638 - #2 break
INFO  04:00:05,644 - #35 ;
INFO  04:00:05,644 - #43 }
INFO  04:00:05,644 - #8 print
INFO  04:00:05,644 - #38 (
INFO  04:00:05,645 - #14 a
INFO  04:00:05,645 - #40 [
INFO  04:00:05,645 - #15 3
INFO  04:00:05,645 - #41 ]
INFO  04:00:05,645 - #39 )
INFO  04:00:05,645 - #35 ;
INFO  04:00:05,646 - #8 print
INFO  04:00:05,646 - #38 (
INFO  04:00:05,646 - #14 sb
INFO  04:00:05,647 - #19 +
INFO  04:00:05,647 - #18 "jos nesto"
INFO  04:00:05,647 - #39 )
INFO  04:00:05,647 - #35 ;
INFO  04:00:05,647 - #43 }
INFO  04:00:05,647 - #43 }
INFO  04:00:05,647 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test05.mj
INFO  04:00:05,649 - #1 program
INFO  04:00:05,649 - #14 Rastojanje
INFO  04:00:05,649 - #14 int
INFO  04:00:05,649 - #14 xa
INFO  04:00:05,650 - #36 ,
INFO  04:00:05,650 - #14 ya
INFO  04:00:05,650 - #36 ,
INFO  04:00:05,650 - #14 xb
INFO  04:00:05,650 - #36 ,
INFO  04:00:05,650 - #14 yb
INFO  04:00:05,650 - #36 ,
INFO  04:00:05,650 - #14 xc
INFO  04:00:05,651 - #36 ,
INFO  04:00:05,651 - #14 xc
INFO  04:00:05,651 - #35 ;
INFO  04:00:05,651 - #14 char
INFO  04:00:05,651 - #14 cccc
INFO  04:00:05,652 - #35 ;
INFO  04:00:05,652 - #14 int
INFO  04:00:05,652 - #14 a
INFO  04:00:05,652 - #36 ,
INFO  04:00:05,652 - #14 b
INFO  04:00:05,653 - #14 c
INFO  04:00:05,653 - #35 ;
INFO  04:00:05,653 - #14 int
INFO  04:00:05,653 - #14 u
INFO  04:00:05,653 - #36 ,
INFO  04:00:05,654 - #14 v
INFO  04:00:05,654 - #35 ;
INFO  04:00:05,654 - #42 {
INFO  04:00:05,654 - #14 int
INFO  04:00:05,654 - #14 distance
INFO  04:00:05,654 - #38 (
INFO  04:00:05,654 - #14 int
INFO  04:00:05,654 - #14 x1
INFO  04:00:05,654 - #36 ,
INFO  04:00:05,655 - #14 int
INFO  04:00:05,655 - #14 y1
INFO  04:00:05,655 - #36 ,
INFO  04:00:05,655 - #14 int
INFO  04:00:05,655 - #14 x2
INFO  04:00:05,655 - #36 ,
INFO  04:00:05,655 - #14 int
INFO  04:00:05,655 - #14 y2
INFO  04:00:05,655 - #39 )
INFO  04:00:05,656 - #42 {
INFO  04:00:05,656 - #14 sqrt
INFO  04:00:05,656 - #38 (
INFO  04:00:05,656 - #14 sqr
INFO  04:00:05,656 - #38 (
INFO  04:00:05,656 - #14 x1
INFO  04:00:05,656 - #20 -
INFO  04:00:05,656 - #14 x2
INFO  04:00:05,656 - #39 )
INFO  04:00:05,656 - #19 +
INFO  04:00:05,657 - #14 sqr
INFO  04:00:05,657 - #38 (
INFO  04:00:05,657 - #14 y1
INFO  04:00:05,657 - #20 -
INFO  04:00:05,657 - #14 y2
INFO  04:00:05,657 - #39 )
INFO  04:00:05,657 - #39 )
INFO  04:00:05,657 - #35 ;
INFO  04:00:05,658 - #43 }
INFO  04:00:05,658 - #14 int
INFO  04:00:05,658 - #14 obim
INFO  04:00:05,658 - #38 (
INFO  04:00:05,658 - #14 int
INFO  04:00:05,658 - #14 a
INFO  04:00:05,658 - #36 ,
INFO  04:00:05,658 - #14 int
INFO  04:00:05,659 - #14 b
INFO  04:00:05,659 - #36 ,
INFO  04:00:05,659 - #14 int
INFO  04:00:05,659 - #14 c
INFO  04:00:05,659 - #39 )
INFO  04:00:05,659 - #14 char
INFO  04:00:05,659 - #14 o
INFO  04:00:05,659 - #35 ;
INFO  04:00:05,659 - #42 {
INFO  04:00:05,659 - #14 o
INFO  04:00:05,660 - #32 =
INFO  04:00:05,660 - #14 a
INFO  04:00:05,660 - #19 +
INFO  04:00:05,660 - #14 b
INFO  04:00:05,660 - #19 +
INFO  04:00:05,660 - #14 c
INFO  04:00:05,660 - #35 ;
INFO  04:00:05,660 - #10 return
INFO  04:00:05,660 - #14 o
INFO  04:00:05,661 - #35 ;
INFO  04:00:05,661 - #43 }
INFO  04:00:05,661 - #11 void
INFO  04:00:05,661 - #14 povrsina
INFO  04:00:05,661 - #38 (
INFO  04:00:05,661 - #14 int
INFO  04:00:05,661 - #14 a
INFO  04:00:05,661 - #36 ,
INFO  04:00:05,662 - #14 int
INFO  04:00:05,662 - #14 b
INFO  04:00:05,662 - #36 ,
INFO  04:00:05,662 - #14 int
INFO  04:00:05,662 - #14 c
INFO  04:00:05,662 - #39 )
INFO  04:00:05,662 - #14 string
INFO  04:00:05,662 - #14 s
INFO  04:00:05,662 - #35 ;
INFO  04:00:05,662 - #42 {
INFO  04:00:05,663 - #14 s
INFO  04:00:05,663 - #32 =
INFO  04:00:05,663 - #38 (
INFO  04:00:05,663 - #14 a
INFO  04:00:05,663 - #19 +
INFO  04:00:05,663 - #14 b
INFO  04:00:05,663 - #19 +
INFO  04:00:05,663 - #14 c
INFO  04:00:05,663 - #39 )
INFO  04:00:05,664 - #22 /
INFO  04:00:05,664 - #15 2
INFO  04:00:05,664 - #35 ;
INFO  04:00:05,664 - #10 return
INFO  04:00:05,664 - #14 s
INFO  04:00:05,664 - #35 ;
INFO  04:00:05,664 - #43 }
INFO  04:00:05,665 - #14 int
INFO  04:00:05,665 - #14 pogresna
INFO  04:00:05,665 - #38 (
INFO  04:00:05,665 - #14 int
INFO  04:00:05,665 - #14 x
INFO  04:00:05,665 - #36 ,
INFO  04:00:05,665 - #14 z
INFO  04:00:05,665 - #36 ,
INFO  04:00:05,665 - #14 int
INFO  04:00:05,666 - #39 )
INFO  04:00:05,666 - #42 {
INFO  04:00:05,666 - #10 return
INFO  04:00:05,666 - #15 1
INFO  04:00:05,666 - #35 ;
INFO  04:00:05,666 - #43 }
INFO  04:00:05,666 - #14 int
INFO  04:00:05,666 - #14 main
INFO  04:00:05,667 - #38 (
INFO  04:00:05,667 - #39 )
INFO  04:00:05,667 - #14 bool
INFO  04:00:05,667 - #14 b
INFO  04:00:05,667 - #35 ;
INFO  04:00:05,667 - #14 string
INFO  04:00:05,667 - #14 p
INFO  04:00:05,667 - #42 {
INFO  04:00:05,668 - #9 read
INFO  04:00:05,668 - #38 (
INFO  04:00:05,668 - #14 xc
INFO  04:00:05,668 - #39 )
INFO  04:00:05,668 - #35 ;
INFO  04:00:05,668 - #9 read
INFO  04:00:05,668 - #38 (
INFO  04:00:05,668 - #14 yc
INFO  04:00:05,669 - #39 )
INFO  04:00:05,669 - #35 ;
INFO  04:00:05,669 - #14 a
INFO  04:00:05,670 - #32 =
INFO  04:00:05,670 - #14 distance
INFO  04:00:05,670 - #38 (
INFO  04:00:05,670 - #14 cccc
INFO  04:00:05,670 - #36 ,
INFO  04:00:05,671 - #14 ya
INFO  04:00:05,671 - #36 ,
INFO  04:00:05,671 - #14 xb
INFO  04:00:05,671 - #36 ,
INFO  04:00:05,671 - #14 yb
INFO  04:00:05,671 - #39 )
INFO  04:00:05,671 - #35 ;
INFO  04:00:05,672 - #14 b
INFO  04:00:05,672 - #32 =
INFO  04:00:05,672 - #14 distance
INFO  04:00:05,672 - #38 (
INFO  04:00:05,672 - #14 xb
INFO  04:00:05,672 - #36 ,
INFO  04:00:05,672 - #14 yb
INFO  04:00:05,672 - #36 ,
INFO  04:00:05,672 - #14 xc
INFO  04:00:05,673 - #36 ,
INFO  04:00:05,673 - #14 yc
INFO  04:00:05,673 - #39 )
INFO  04:00:05,673 - #35 ;
INFO  04:00:05,673 - #14 c
INFO  04:00:05,673 - #32 =
INFO  04:00:05,673 - #14 distance
INFO  04:00:05,674 - #38 (
INFO  04:00:05,674 - #14 ya
INFO  04:00:05,674 - #36 ,
INFO  04:00:05,674 - #14 xc
INFO  04:00:05,674 - #36 ,
INFO  04:00:05,674 - #14 yc
INFO  04:00:05,674 - #39 )
INFO  04:00:05,674 - #35 ;
INFO  04:00:05,675 - #6 if
INFO  04:00:05,675 - #38 (
INFO  04:00:05,675 - #14 a
INFO  04:00:05,675 - #19 +
INFO  04:00:05,675 - #14 u
INFO  04:00:05,675 - #26 >
INFO  04:00:05,675 - #14 v
INFO  04:00:05,675 - #30 &&
INFO  04:00:05,675 - #14 a
INFO  04:00:05,676 - #19 +
INFO  04:00:05,676 - #14 v
INFO  04:00:05,676 - #26 >
INFO  04:00:05,676 - #14 u
INFO  04:00:05,676 - #30 &&
INFO  04:00:05,676 - #14 u
INFO  04:00:05,676 - #19 +
INFO  04:00:05,676 - #14 v
INFO  04:00:05,676 - #26 >
INFO  04:00:05,677 - #14 a
INFO  04:00:05,677 - #39 )
INFO  04:00:05,677 - #42 {
INFO  04:00:05,677 - #14 obim
INFO  04:00:05,677 - #38 (
INFO  04:00:05,677 - #14 a
INFO  04:00:05,677 - #36 ,
INFO  04:00:05,677 - #14 b
INFO  04:00:05,678 - #36 ,
INFO  04:00:05,678 - #14 u
INFO  04:00:05,678 - #36 ,
INFO  04:00:05,678 - #14 v
INFO  04:00:05,678 - #39 )
INFO  04:00:05,678 - #35 ;
INFO  04:00:05,678 - #14 povrsina
INFO  04:00:05,678 - #38 (
INFO  04:00:05,678 - #15 5
INFO  04:00:05,679 - #19 +
INFO  04:00:05,679 - #15 2
INFO  04:00:05,679 - #36 ,
INFO  04:00:05,679 - #16 'w'
INFO  04:00:05,679 - #36 ,
INFO  04:00:05,679 - #14 c
INFO  04:00:05,679 - #39 )
INFO  04:00:05,679 - #35 ;
INFO  04:00:05,680 - #8 print
INFO  04:00:05,680 - #38 (
INFO  04:00:05,680 - #18 "Povrsina"
INFO  04:00:05,680 - #19 +
INFO  04:00:05,680 - #18 " trougla "
INFO  04:00:05,680 - #19 +
INFO  04:00:05,680 - #18 "je : "
INFO  04:00:05,680 - #39 )
INFO  04:00:05,680 - #35 ;
INFO  04:00:05,681 - #43 }
INFO  04:00:05,681 - #4 else
INFO  04:00:05,681 - #42 {
INFO  04:00:05,681 - #8 print
INFO  04:00:05,681 - #38 (
INFO  04:00:05,681 - #18 "Tacke ne formiraju trougao!"
INFO  04:00:05,681 - #39 )
INFO  04:00:05,682 - #35 ;
INFO  04:00:05,682 - #8 print
INFO  04:00:05,682 - #38 (
INFO  04:00:05,682 - #14 eol
INFO  04:00:05,682 - #39 )
INFO  04:00:05,682 - #35 ;
INFO  04:00:05,682 - #43 }
INFO  04:00:05,682 - #43 }
INFO  04:00:05,682 - #43 }
INFO  04:00:05,683 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test06.mj
INFO  04:00:05,684 - #1 program
INFO  04:00:05,684 - #14 test06
INFO  04:00:05,684 - #14 int
INFO  04:00:05,684 - #14 a
INFO  04:00:05,684 - #40 [
INFO  04:00:05,684 - #41 ]
INFO  04:00:05,684 - #36 ,
INFO  04:00:05,684 - #14 b
INFO  04:00:05,684 - #40 [
INFO  04:00:05,685 - #41 ]
INFO  04:00:05,685 - #36 ,
INFO  04:00:05,685 - #14 x
INFO  04:00:05,685 - #36 ,
INFO  04:00:05,685 - #14 y
INFO  04:00:05,685 - #35 ;
INFO  04:00:05,685 - #14 char
INFO  04:00:05,686 - #14 c
INFO  04:00:05,686 - #40 [
INFO  04:00:05,686 - #41 ]
INFO  04:00:05,686 - #36 ,
INFO  04:00:05,686 - #14 d
INFO  04:00:05,686 - #40 [
INFO  04:00:05,687 - #41 ]
INFO  04:00:05,687 - #36 ,
INFO  04:00:05,687 - #14 j
INFO  04:00:05,687 - #35 ;
INFO  04:00:05,687 - #42 {
INFO  04:00:05,687 - #11 void
INFO  04:00:05,687 - #14 main
INFO  04:00:05,687 - #38 (
INFO  04:00:05,688 - #39 )
INFO  04:00:05,688 - #42 {
INFO  04:00:05,688 - #14 x
INFO  04:00:05,688 - #32 =
INFO  04:00:05,688 - #15 3
INFO  04:00:05,688 - #35 ;
INFO  04:00:05,688 - #14 a
INFO  04:00:05,688 - #32 =
INFO  04:00:05,688 - #7 new
INFO  04:00:05,689 - #14 char
INFO  04:00:05,689 - #40 [
INFO  04:00:05,689 - #15 5
INFO  04:00:05,689 - #41 ]
INFO  04:00:05,689 - #35 ;
INFO  04:00:05,689 - #14 a
INFO  04:00:05,689 - #40 [
INFO  04:00:05,689 - #14 x
INFO  04:00:05,689 - #33 ++
INFO  04:00:05,690 - #41 ]
INFO  04:00:05,690 - #32 =
INFO  04:00:05,690 - #15 2
INFO  04:00:05,690 - #35 ;
INFO  04:00:05,690 - #14 a
INFO  04:00:05,690 - #40 [
INFO  04:00:05,690 - #14 j
INFO  04:00:05,690 - #41 ]
INFO  04:00:05,690 - #32 =
INFO  04:00:05,691 - #15 3
INFO  04:00:05,691 - #35 ;
INFO  04:00:05,691 - #14 a
INFO  04:00:05,691 - #40 [
INFO  04:00:05,691 - #15 1
INFO  04:00:05,691 - #41 ]
INFO  04:00:05,691 - #32 =
INFO  04:00:05,691 - #14 x
INFO  04:00:05,691 - #19 +
INFO  04:00:05,692 - #14 b
INFO  04:00:05,692 - #35 ;
INFO  04:00:05,692 - #14 j
INFO  04:00:05,692 - #32 =
INFO  04:00:05,692 - #16 'a'
INFO  04:00:05,692 - #35 ;
INFO  04:00:05,692 - #14 c
INFO  04:00:05,692 - #32 =
INFO  04:00:05,693 - #7 new
INFO  04:00:05,693 - #14 char
INFO  04:00:05,693 - #40 [
INFO  04:00:05,693 - #15 3
INFO  04:00:05,693 - #41 ]
INFO  04:00:05,693 - #35 ;
INFO  04:00:05,693 - #14 c
INFO  04:00:05,693 - #40 [
INFO  04:00:05,693 - #15 2
INFO  04:00:05,694 - #41 ]
INFO  04:00:05,694 - #32 =
INFO  04:00:05,694 - #14 j
INFO  04:00:05,694 - #33 ++
INFO  04:00:05,694 - #35 ;
INFO  04:00:05,694 - #14 len
INFO  04:00:05,694 - #38 (
INFO  04:00:05,695 - #14 x
INFO  04:00:05,695 - #39 )
INFO  04:00:05,695 - #35 ;
INFO  04:00:05,695 - #14 len
INFO  04:00:05,695 - #38 (
INFO  04:00:05,695 - #14 a
INFO  04:00:05,695 - #39 )
INFO  04:00:05,695 - #35 ;
INFO  04:00:05,695 - #8 print
INFO  04:00:05,695 - #38 (
INFO  04:00:05,696 - #14 a
INFO  04:00:05,696 - #39 )
INFO  04:00:05,696 - #35 ;
INFO  04:00:05,696 - #43 }
INFO  04:00:05,696 - #43 }
INFO  04:00:05,697 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test07.mj
INFO  04:00:05,697 - #1 program
INFO  04:00:05,698 - #14 Geometrija
INFO  04:00:05,698 - #5 const
INFO  04:00:05,698 - #14 int
INFO  04:00:05,698 - #14 PI
INFO  04:00:05,698 - #32 =
INFO  04:00:05,698 - #15 3
INFO  04:00:05,698 - #35 ;
INFO  04:00:05,698 - #14 int
INFO  04:00:05,698 - #14 rezultati
INFO  04:00:05,699 - #40 [
INFO  04:00:05,699 - #41 ]
INFO  04:00:05,699 - #35 ;
INFO  04:00:05,699 - #14 int
INFO  04:00:05,699 - #14 c
INFO  04:00:05,699 - #35 ;
INFO  04:00:05,699 - #3 class
INFO  04:00:05,699 - #14 kvadrat
INFO  04:00:05,700 - #42 {
INFO  04:00:05,700 - #14 string
INFO  04:00:05,700 - #14 ime
INFO  04:00:05,700 - #35 ;
INFO  04:00:05,700 - #14 int
INFO  04:00:05,700 - #14 a
INFO  04:00:05,700 - #35 ;
INFO  04:00:05,701 - #14 int
INFO  04:00:05,701 - #14 b
INFO  04:00:05,701 - #35 ;
INFO  04:00:05,701 - #42 {
INFO  04:00:05,701 - #14 int
INFO  04:00:05,701 - #14 povrsina
INFO  04:00:05,702 - #38 (
INFO  04:00:05,702 - #39 )
INFO  04:00:05,709 - #14 int
INFO  04:00:05,712 - #14 p
INFO  04:00:05,713 - #35 ;
INFO  04:00:05,713 - #42 {
INFO  04:00:05,713 - #14 p
INFO  04:00:05,713 - #32 =
INFO  04:00:05,714 - #14 a
INFO  04:00:05,714 - #21 *
INFO  04:00:05,714 - #14 b
INFO  04:00:05,714 - #35 ;
INFO  04:00:05,714 - #10 return
INFO  04:00:05,714 - #14 p
INFO  04:00:05,715 - #35 ;
INFO  04:00:05,715 - #43 }
INFO  04:00:05,715 - #11 void
INFO  04:00:05,715 - #14 setA
INFO  04:00:05,716 - #38 (
INFO  04:00:05,716 - #39 )
INFO  04:00:05,716 - #42 {
INFO  04:00:05,716 - #9 read
INFO  04:00:05,716 - #38 (
INFO  04:00:05,717 - #14 a
INFO  04:00:05,717 - #39 )
INFO  04:00:05,717 - #35 ;
INFO  04:00:05,717 - #43 }
INFO  04:00:05,717 - #11 void
INFO  04:00:05,717 - #14 setB
INFO  04:00:05,717 - #38 (
INFO  04:00:05,717 - #39 )
INFO  04:00:05,717 - #42 {
INFO  04:00:05,718 - #9 read
INFO  04:00:05,718 - #38 (
INFO  04:00:05,718 - #14 b
INFO  04:00:05,718 - #39 )
INFO  04:00:05,718 - #35 ;
INFO  04:00:05,718 - #43 }
INFO  04:00:05,718 - #11 void
INFO  04:00:05,718 - #14 setIme
INFO  04:00:05,719 - #38 (
INFO  04:00:05,719 - #39 )
INFO  04:00:05,719 - #42 {
INFO  04:00:05,719 - #9 read
INFO  04:00:05,720 - #38 (
INFO  04:00:05,720 - #14 ime
INFO  04:00:05,720 - #39 )
INFO  04:00:05,720 - #35 ;
INFO  04:00:05,720 - #43 }
INFO  04:00:05,720 - #43 }
INFO  04:00:05,721 - #43 }
INFO  04:00:05,721 - #14 kvadrat
INFO  04:00:05,721 - #14 kvad
INFO  04:00:05,721 - #35 ;
INFO  04:00:05,721 - #42 {
INFO  04:00:05,721 - #14 int
INFO  04:00:05,721 - #14 obim
INFO  04:00:05,722 - #38 (
INFO  04:00:05,722 - #14 int
INFO  04:00:05,722 - #14 x
INFO  04:00:05,722 - #36 ,
INFO  04:00:05,723 - #14 int
INFO  04:00:05,723 - #14 y
INFO  04:00:05,723 - #39 )
INFO  04:00:05,723 - #14 int
INFO  04:00:05,723 - #14 rez
INFO  04:00:05,723 - #35 ;
INFO  04:00:05,724 - #42 {
INFO  04:00:05,724 - #14 rez
INFO  04:00:05,724 - #32 =
INFO  04:00:05,724 - #15 2
INFO  04:00:05,724 - #21 *
INFO  04:00:05,724 - #14 x
INFO  04:00:05,725 - #19 +
INFO  04:00:05,725 - #15 2
INFO  04:00:05,725 - #21 *
INFO  04:00:05,725 - #14 y
INFO  04:00:05,725 - #35 ;
INFO  04:00:05,726 - #10 return
INFO  04:00:05,726 - #14 rez
INFO  04:00:05,726 - #35 ;
INFO  04:00:05,726 - #43 }
INFO  04:00:05,726 - #14 int
INFO  04:00:05,726 - #14 obim2
INFO  04:00:05,726 - #38 (
INFO  04:00:05,726 - #14 kvadrat
INFO  04:00:05,726 - #14 k
INFO  04:00:05,726 - #39 )
INFO  04:00:05,727 - #14 int
INFO  04:00:05,727 - #14 rez
INFO  04:00:05,727 - #35 ;
INFO  04:00:05,727 - #14 kvadrat
INFO  04:00:05,727 - #14 pom
INFO  04:00:05,727 - #35 ;
INFO  04:00:05,727 - #42 {
INFO  04:00:05,727 - #14 pom
INFO  04:00:05,727 - #32 =
INFO  04:00:05,727 - #14 k
INFO  04:00:05,728 - #35 ;
INFO  04:00:05,728 - #14 rez
INFO  04:00:05,728 - #32 =
INFO  04:00:05,728 - #15 2
INFO  04:00:05,728 - #21 *
INFO  04:00:05,728 - #14 pom
INFO  04:00:05,728 - #37 .
INFO  04:00:05,728 - #14 b
INFO  04:00:05,728 - #19 +
INFO  04:00:05,729 - #15 2
INFO  04:00:05,729 - #21 *
INFO  04:00:05,729 - #14 pom
INFO  04:00:05,729 - #37 .
INFO  04:00:05,729 - #14 a
INFO  04:00:05,729 - #35 ;
INFO  04:00:05,729 - #10 return
INFO  04:00:05,729 - #14 rez
INFO  04:00:05,729 - #35 ;
INFO  04:00:05,729 - #43 }
INFO  04:00:05,730 - #14 int
INFO  04:00:05,730 - #14 racunaj
INFO  04:00:05,730 - #38 (
INFO  04:00:05,730 - #39 )
INFO  04:00:05,730 - #14 int
INFO  04:00:05,730 - #14 x
INFO  04:00:05,730 - #35 ;
INFO  04:00:05,730 - #14 char
INFO  04:00:05,730 - #14 i
INFO  04:00:05,731 - #40 [
INFO  04:00:05,731 - #41 ]
INFO  04:00:05,731 - #35 ;
INFO  04:00:05,731 - #42 {
INFO  04:00:05,731 - #9 read
INFO  04:00:05,731 - #38 (
INFO  04:00:05,731 - #14 x
INFO  04:00:05,731 - #39 )
INFO  04:00:05,731 - #35 ;
INFO  04:00:05,731 - #10 return
INFO  04:00:05,732 - #14 x
INFO  04:00:05,732 - #35 ;
INFO  04:00:05,732 - #43 }
INFO  04:00:05,732 - #14 int
INFO  04:00:05,732 - #14 saberi
INFO  04:00:05,732 - #38 (
INFO  04:00:05,732 - #14 int
INFO  04:00:05,732 - #14 b
INFO  04:00:05,732 - #36 ,
INFO  04:00:05,733 - #14 int
INFO  04:00:05,733 - #14 c
INFO  04:00:05,733 - #39 )
INFO  04:00:05,733 - #14 int
INFO  04:00:05,733 - #14 r
INFO  04:00:05,733 - #35 ;
INFO  04:00:05,733 - #42 {
INFO  04:00:05,733 - #14 b
INFO  04:00:05,733 - #32 =
INFO  04:00:05,734 - #14 r
INFO  04:00:05,734 - #19 +
INFO  04:00:05,734 - #14 c
INFO  04:00:05,734 - #35 ;
INFO  04:00:05,734 - #10 return
INFO  04:00:05,734 - #14 b
INFO  04:00:05,734 - #35 ;
INFO  04:00:05,734 - #43 }
INFO  04:00:05,734 - #14 int
INFO  04:00:05,735 - #14 prosledi
INFO  04:00:05,735 - #38 (
INFO  04:00:05,738 - #14 int
INFO  04:00:05,738 - #14 f
INFO  04:00:05,739 - #39 )
INFO  04:00:05,739 - #14 int
INFO  04:00:05,739 - #14 g
INFO  04:00:05,739 - #35 ;
INFO  04:00:05,739 - #42 {
INFO  04:00:05,740 - #14 g
INFO  04:00:05,740 - #32 =
INFO  04:00:05,740 - #14 f
INFO  04:00:05,740 - #35 ;
INFO  04:00:05,740 - #10 return
INFO  04:00:05,740 - #14 g
INFO  04:00:05,740 - #35 ;
INFO  04:00:05,741 - #43 }
INFO  04:00:05,741 - #11 void
INFO  04:00:05,741 - #14 stampaj
INFO  04:00:05,741 - #38 (
INFO  04:00:05,741 - #14 char
INFO  04:00:05,741 - #14 r
INFO  04:00:05,741 - #39 )
INFO  04:00:05,741 - #42 {
INFO  04:00:05,742 - #8 print
INFO  04:00:05,742 - #38 (
INFO  04:00:05,742 - #14 r
INFO  04:00:05,742 - #39 )
INFO  04:00:05,742 - #35 ;
INFO  04:00:05,742 - #43 }
INFO  04:00:05,743 - #11 void
INFO  04:00:05,743 - #14 main
INFO  04:00:05,743 - #38 (
INFO  04:00:05,743 - #39 )
INFO  04:00:05,743 - #42 {
INFO  04:00:05,743 - #14 rezultati
INFO  04:00:05,743 - #40 [
INFO  04:00:05,744 - #15 1
INFO  04:00:05,744 - #41 ]
INFO  04:00:05,744 - #32 =
INFO  04:00:05,744 - #15 1
INFO  04:00:05,744 - #35 ;
INFO  04:00:05,744 - #14 kvad
INFO  04:00:05,744 - #37 .
INFO  04:00:05,744 - #14 setA
INFO  04:00:05,744 - #38 (
INFO  04:00:05,745 - #39 )
INFO  04:00:05,745 - #35 ;
INFO  04:00:05,745 - #14 kvad
INFO  04:00:05,745 - #37 .
INFO  04:00:05,745 - #14 setB
INFO  04:00:05,745 - #38 (
INFO  04:00:05,745 - #39 )
INFO  04:00:05,745 - #35 ;
INFO  04:00:05,745 - #14 rezultati
INFO  04:00:05,746 - #40 [
INFO  04:00:05,746 - #15 2
INFO  04:00:05,746 - #41 ]
INFO  04:00:05,746 - #32 =
INFO  04:00:05,746 - #14 kvad
INFO  04:00:05,746 - #37 .
INFO  04:00:05,746 - #14 povrsina
INFO  04:00:05,746 - #38 (
INFO  04:00:05,747 - #39 )
INFO  04:00:05,747 - #35 ;
INFO  04:00:05,747 - #14 rezultati
INFO  04:00:05,747 - #40 [
INFO  04:00:05,747 - #15 3
INFO  04:00:05,747 - #41 ]
INFO  04:00:05,747 - #32 =
INFO  04:00:05,747 - #14 obim2
INFO  04:00:05,747 - #38 (
INFO  04:00:05,748 - #14 kvad
INFO  04:00:05,748 - #39 )
INFO  04:00:05,749 - #35 ;
INFO  04:00:05,749 - #6 if
INFO  04:00:05,749 - #38 (
INFO  04:00:05,749 - #14 c
INFO  04:00:05,749 - #26 >
INFO  04:00:05,749 - #15 0
INFO  04:00:05,749 - #39 )
INFO  04:00:05,750 - #42 {
INFO  04:00:05,750 - #12 while
INFO  04:00:05,750 - #38 (
INFO  04:00:05,751 - #14 c
INFO  04:00:05,751 - #26 >
INFO  04:00:05,751 - #15 0
INFO  04:00:05,751 - #39 )
INFO  04:00:05,751 - #9 read
INFO  04:00:05,751 - #38 (
INFO  04:00:05,751 - #14 c
INFO  04:00:05,751 - #39 )
INFO  04:00:05,752 - #35 ;
INFO  04:00:05,752 - #43 }
INFO  04:00:05,752 - #14 c
INFO  04:00:05,753 - #32 =
INFO  04:00:05,753 - #14 racunaj
INFO  04:00:05,753 - #38 (
INFO  04:00:05,754 - #39 )
INFO  04:00:05,754 - #35 ;
INFO  04:00:05,754 - #43 }
INFO  04:00:05,754 - #43 }
INFO  04:00:05,754 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test08.mj
INFO  04:00:05,756 - #1 program
INFO  04:00:05,758 - #14 test08
INFO  04:00:05,765 - #3 class
INFO  04:00:05,765 - #14 Alfa
INFO  04:00:05,765 - #13 extends
INFO  04:00:05,765 - #14 Nepostojeca
INFO  04:00:05,768 - #42 {
INFO  04:00:05,768 - #14 int
INFO  04:00:05,769 - #14 x
INFO  04:00:05,770 - #35 ;
INFO  04:00:05,771 - #14 char
INFO  04:00:05,771 - #14 x
INFO  04:00:05,771 - #35 ;
INFO  04:00:05,771 - #14 real
INFO  04:00:05,771 - #14 y
INFO  04:00:05,772 - #35 ;
INFO  04:00:05,772 - #14 y
INFO  04:00:05,772 - #14 z
INFO  04:00:05,772 - #35 ;
INFO  04:00:05,772 - #14 char
INFO  04:00:05,772 - #14 b
INFO  04:00:05,773 - #35 ;
INFO  04:00:05,773 - #42 {
INFO  04:00:05,773 - #11 void
INFO  04:00:05,773 - #14 k
INFO  04:00:05,773 - #38 (
INFO  04:00:05,773 - #39 )
INFO  04:00:05,773 - #42 {
INFO  04:00:05,773 - #14 this
INFO  04:00:05,773 - #37 .
INFO  04:00:05,773 - #14 b
INFO  04:00:05,773 - #32 =
INFO  04:00:05,774 - #16 'a'
INFO  04:00:05,774 - #35 ;
INFO  04:00:05,774 - #43 }
INFO  04:00:05,774 - #14 int
INFO  04:00:05,774 - #14 f
INFO  04:00:05,774 - #38 (
INFO  04:00:05,774 - #14 int
INFO  04:00:05,774 - #14 sss
INFO  04:00:05,774 - #39 )
INFO  04:00:05,774 - #42 {
INFO  04:00:05,774 - #14 this
INFO  04:00:05,775 - #32 =
INFO  04:00:05,775 - #15 1
INFO  04:00:05,775 - #35 ;
INFO  04:00:05,775 - #14 this
INFO  04:00:05,775 - #37 .
INFO  04:00:05,775 - #14 b
INFO  04:00:05,775 - #32 =
INFO  04:00:05,775 - #15 1
INFO  04:00:05,775 - #35 ;
INFO  04:00:05,775 - #14 this
INFO  04:00:05,775 - #37 .
INFO  04:00:05,776 - #14 zh
INFO  04:00:05,776 - #32 =
INFO  04:00:05,776 - #15 2
INFO  04:00:05,776 - #35 ;
INFO  04:00:05,776 - #14 this
INFO  04:00:05,776 - #37 .
INFO  04:00:05,776 - #14 b
INFO  04:00:05,776 - #32 =
INFO  04:00:05,776 - #14 k
INFO  04:00:05,777 - #38 (
INFO  04:00:05,777 - #39 )
INFO  04:00:05,777 - #35 ;
INFO  04:00:05,777 - #10 return
INFO  04:00:05,777 - #14 b
INFO  04:00:05,777 - #35 ;
INFO  04:00:05,777 - #43 }
INFO  04:00:05,777 - #43 }
INFO  04:00:05,777 - #43 }
INFO  04:00:05,777 - #3 class
INFO  04:00:05,778 - #14 Beta
INFO  04:00:05,778 - #42 {
INFO  04:00:05,778 - #14 int
INFO  04:00:05,778 - #14 a
INFO  04:00:05,778 - #36 ,
INFO  04:00:05,778 - #14 b
INFO  04:00:05,778 - #35 ;
INFO  04:00:05,778 - #42 {
INFO  04:00:05,778 - #11 void
INFO  04:00:05,778 - #14 setA
INFO  04:00:05,778 - #38 (
INFO  04:00:05,778 - #39 )
INFO  04:00:05,779 - #42 {
INFO  04:00:05,779 - #9 read
INFO  04:00:05,779 - #38 (
INFO  04:00:05,779 - #14 a
INFO  04:00:05,779 - #39 )
INFO  04:00:05,779 - #35 ;
INFO  04:00:05,779 - #43 }
INFO  04:00:05,779 - #11 void
INFO  04:00:05,779 - #14 setAB
INFO  04:00:05,779 - #38 (
INFO  04:00:05,780 - #14 int
INFO  04:00:05,780 - #14 aa
INFO  04:00:05,780 - #36 ,
INFO  04:00:05,780 - #14 int
INFO  04:00:05,780 - #14 bb
INFO  04:00:05,780 - #39 )
INFO  04:00:05,780 - #42 {
INFO  04:00:05,780 - #14 a
INFO  04:00:05,780 - #32 =
INFO  04:00:05,780 - #14 aa
INFO  04:00:05,781 - #35 ;
INFO  04:00:05,781 - #14 b
INFO  04:00:05,781 - #32 =
INFO  04:00:05,781 - #14 bb
INFO  04:00:05,781 - #35 ;
INFO  04:00:05,781 - #43 }
INFO  04:00:05,781 - #43 }
INFO  04:00:05,781 - #43 }
INFO  04:00:05,781 - #3 class
INFO  04:00:05,781 - #14 Gama
INFO  04:00:05,781 - #13 extends
INFO  04:00:05,782 - #14 Beta
INFO  04:00:05,782 - #42 {
INFO  04:00:05,782 - #14 Beta
INFO  04:00:05,782 - #14 b
INFO  04:00:05,782 - #35 ;
INFO  04:00:05,782 - #43 }
INFO  04:00:05,782 - #14 Gama
INFO  04:00:05,782 - #14 g
INFO  04:00:05,782 - #35 ;
INFO  04:00:05,782 - #42 {
INFO  04:00:05,782 - #11 void
INFO  04:00:05,783 - #14 main2
INFO  04:00:05,783 - #38 (
INFO  04:00:05,783 - #39 )
INFO  04:00:05,783 - #14 Alfa
INFO  04:00:05,783 - #14 a
INFO  04:00:05,783 - #35 ;
INFO  04:00:05,783 - #42 {
INFO  04:00:05,783 - #14 a
INFO  04:00:05,783 - #32 =
INFO  04:00:05,783 - #7 new
INFO  04:00:05,784 - #14 Alfa
INFO  04:00:05,784 - #35 ;
INFO  04:00:05,784 - #14 g
INFO  04:00:05,784 - #32 =
INFO  04:00:05,784 - #7 new
INFO  04:00:05,784 - #14 Gama
INFO  04:00:05,784 - #35 ;
INFO  04:00:05,784 - #8 print
INFO  04:00:05,784 - #38 (
INFO  04:00:05,784 - #14 a
INFO  04:00:05,784 - #37 .
INFO  04:00:05,784 - #14 f
INFO  04:00:05,785 - #38 (
INFO  04:00:05,785 - #38 (
INFO  04:00:05,785 - #15 3
INFO  04:00:05,785 - #19 +
INFO  04:00:05,785 - #15 5
INFO  04:00:05,785 - #39 )
INFO  04:00:05,785 - #20 -
INFO  04:00:05,785 - #15 4
INFO  04:00:05,785 - #39 )
INFO  04:00:05,785 - #39 )
INFO  04:00:05,786 - #35 ;
INFO  04:00:05,786 - #14 this
INFO  04:00:05,786 - #32 =
INFO  04:00:05,786 - #15 3
INFO  04:00:05,786 - #35 ;
INFO  04:00:05,786 - #14 g
INFO  04:00:05,786 - #37 .
INFO  04:00:05,786 - #14 setA
INFO  04:00:05,787 - #38 (
INFO  04:00:05,787 - #15 2
INFO  04:00:05,787 - #39 )
INFO  04:00:05,787 - #35 ;
INFO  04:00:05,787 - #14 g
INFO  04:00:05,787 - #37 .
INFO  04:00:05,787 - #14 setAB
INFO  04:00:05,787 - #38 (
INFO  04:00:05,787 - #15 2
INFO  04:00:05,788 - #39 )
INFO  04:00:05,788 - #35 ;
INFO  04:00:05,788 - #14 g
INFO  04:00:05,788 - #37 .
INFO  04:00:05,788 - #14 setAB
INFO  04:00:05,788 - #38 (
INFO  04:00:05,788 - #16 'a'
INFO  04:00:05,789 - #36 ,
INFO  04:00:05,789 - #16 'b'
INFO  04:00:05,789 - #39 )
INFO  04:00:05,789 - #35 ;
INFO  04:00:05,789 - #14 g
INFO  04:00:05,789 - #37 .
INFO  04:00:05,789 - #14 setAB
INFO  04:00:05,789 - #38 (
INFO  04:00:05,789 - #16 'a'
INFO  04:00:05,790 - #36 ,
INFO  04:00:05,790 - #15 5
INFO  04:00:05,790 - #39 )
INFO  04:00:05,790 - #35 ;
INFO  04:00:05,790 - #14 g
INFO  04:00:05,790 - #37 .
INFO  04:00:05,790 - #14 setAB
INFO  04:00:05,790 - #38 (
INFO  04:00:05,790 - #15 5
INFO  04:00:05,791 - #36 ,
INFO  04:00:05,791 - #16 'b'
INFO  04:00:05,791 - #39 )
INFO  04:00:05,791 - #35 ;
INFO  04:00:05,791 - #43 }
INFO  04:00:05,791 - #43 }
INFO  04:00:05,791 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test09.mj
INFO  04:00:05,792 - #1 program
INFO  04:00:05,793 - #14 MJAlfabet
INFO  04:00:05,793 - #14 string
INFO  04:00:05,793 - #14 str1
INFO  04:00:05,793 - #36 ,
INFO  04:00:05,793 - #14 str2
INFO  04:00:05,793 - #35 ;
INFO  04:00:05,793 - #14 char
INFO  04:00:05,793 - #14 i
INFO  04:00:05,793 - #35 ;
INFO  04:00:05,794 - #3 class
INFO  04:00:05,794 - #14 Alfa
INFO  04:00:05,794 - #42 {
INFO  04:00:05,794 - #14 char
INFO  04:00:05,794 - #14 a
INFO  04:00:05,794 - #36 ,
INFO  04:00:05,794 - #14 b
INFO  04:00:05,794 - #35 ;
INFO  04:00:05,794 - #14 int
INFO  04:00:05,794 - #14 rez
INFO  04:00:05,794 - #35 ;
INFO  04:00:05,794 - #42 {
INFO  04:00:05,795 - #11 void
INFO  04:00:05,795 - #14 dodaj
INFO  04:00:05,795 - #38 (
INFO  04:00:05,795 - #14 int
INFO  04:00:05,795 - #14 x
INFO  04:00:05,795 - #36 ,
INFO  04:00:05,795 - #14 int
INFO  04:00:05,795 - #14 y
INFO  04:00:05,795 - #36 ,
INFO  04:00:05,795 - #14 int
INFO  04:00:05,795 - #14 z
INFO  04:00:05,795 - #39 )
INFO  04:00:05,796 - #42 {
INFO  04:00:05,796 - #14 a
INFO  04:00:05,796 - #32 =
INFO  04:00:05,796 - #14 x
INFO  04:00:05,796 - #35 ;
INFO  04:00:05,796 - #14 z
INFO  04:00:05,796 - #32 =
INFO  04:00:05,796 - #14 x
INFO  04:00:05,796 - #19 +
INFO  04:00:05,796 - #14 y
INFO  04:00:05,796 - #35 ;
INFO  04:00:05,797 - #10 return
INFO  04:00:05,797 - #14 z
INFO  04:00:05,797 - #35 ;
INFO  04:00:05,797 - #43 }
INFO  04:00:05,797 - #11 void
INFO  04:00:05,797 - #14 saberi
INFO  04:00:05,797 - #38 (
INFO  04:00:05,797 - #14 int
INFO  04:00:05,797 - #14 x
INFO  04:00:05,797 - #36 ,
INFO  04:00:05,797 - #14 int
INFO  04:00:05,798 - #14 y
INFO  04:00:05,798 - #39 )
INFO  04:00:05,798 - #42 {
INFO  04:00:05,798 - #14 rez
INFO  04:00:05,798 - #32 =
INFO  04:00:05,798 - #14 x
INFO  04:00:05,798 - #19 +
INFO  04:00:05,798 - #14 y
INFO  04:00:05,798 - #35 ;
INFO  04:00:05,798 - #43 }
INFO  04:00:05,798 - #11 void
INFO  04:00:05,799 - #14 saberi
INFO  04:00:05,799 - #38 (
INFO  04:00:05,799 - #14 int
INFO  04:00:05,799 - #14 x
INFO  04:00:05,799 - #39 )
INFO  04:00:05,799 - #42 {
INFO  04:00:05,799 - #14 rez
INFO  04:00:05,799 - #32 =
INFO  04:00:05,799 - #14 rez
INFO  04:00:05,799 - #19 +
INFO  04:00:05,800 - #14 x
INFO  04:00:05,800 - #35 ;
INFO  04:00:05,800 - #43 }
INFO  04:00:05,800 - #43 }
INFO  04:00:05,800 - #43 }
INFO  04:00:05,800 - #3 class
INFO  04:00:05,800 - #14 Beta
INFO  04:00:05,800 - #13 extends
INFO  04:00:05,800 - #14 Alfa
INFO  04:00:05,800 - #42 {
INFO  04:00:05,801 - #14 int
INFO  04:00:05,801 - #14 c
INFO  04:00:05,801 - #35 ;
INFO  04:00:05,801 - #14 char
INFO  04:00:05,801 - #14 d
INFO  04:00:05,801 - #40 [
INFO  04:00:05,801 - #41 ]
INFO  04:00:05,801 - #35 ;
INFO  04:00:05,801 - #42 {
INFO  04:00:05,801 - #11 void
INFO  04:00:05,802 - #14 dodaj
INFO  04:00:05,802 - #38 (
INFO  04:00:05,802 - #14 int
INFO  04:00:05,802 - #14 x
INFO  04:00:05,802 - #36 ,
INFO  04:00:05,803 - #14 int
INFO  04:00:05,803 - #14 y
INFO  04:00:05,804 - #36 ,
INFO  04:00:05,804 - #14 int
INFO  04:00:05,804 - #14 z
INFO  04:00:05,804 - #39 )
INFO  04:00:05,804 - #14 bool
INFO  04:00:05,804 - #14 bulova
INFO  04:00:05,804 - #35 ;
INFO  04:00:05,804 - #42 {
INFO  04:00:05,804 - #14 c
INFO  04:00:05,804 - #32 =
INFO  04:00:05,805 - #14 bulova
INFO  04:00:05,805 - #33 ++
INFO  04:00:05,805 - #35 ;
INFO  04:00:05,805 - #14 a
INFO  04:00:05,805 - #32 =
INFO  04:00:05,805 - #18 "Alfa"
INFO  04:00:05,805 - #35 ;
INFO  04:00:05,806 - #14 d
INFO  04:00:05,806 - #32 =
INFO  04:00:05,806 - #18 "Delta"
INFO  04:00:05,806 - #35 ;
INFO  04:00:05,806 - #14 b
INFO  04:00:05,806 - #32 =
INFO  04:00:05,806 - #16 'b'
INFO  04:00:05,806 - #35 ;
INFO  04:00:05,806 - #8 print
INFO  04:00:05,806 - #38 (
INFO  04:00:05,806 - #14 b
INFO  04:00:05,807 - #39 )
INFO  04:00:05,807 - #35 ;
INFO  04:00:05,807 - #43 }
INFO  04:00:05,807 - #43 }
INFO  04:00:05,807 - #43 }
INFO  04:00:05,807 - #3 class
INFO  04:00:05,807 - #14 Gama
INFO  04:00:05,807 - #13 extends
INFO  04:00:05,807 - #14 Alfa
INFO  04:00:05,807 - #42 {
INFO  04:00:05,808 - #14 int
INFO  04:00:05,808 - #14 a
INFO  04:00:05,808 - #35 ;
INFO  04:00:05,808 - #42 {
INFO  04:00:05,808 - #11 void
INFO  04:00:05,808 - #14 dodaj
INFO  04:00:05,808 - #38 (
INFO  04:00:05,808 - #14 int
INFO  04:00:05,808 - #14 x
INFO  04:00:05,808 - #36 ,
INFO  04:00:05,809 - #14 int
INFO  04:00:05,809 - #14 y
INFO  04:00:05,809 - #36 ,
INFO  04:00:05,809 - #14 int
INFO  04:00:05,809 - #14 z
INFO  04:00:05,809 - #39 )
INFO  04:00:05,809 - #42 {
INFO  04:00:05,810 - #14 a
INFO  04:00:05,810 - #32 =
INFO  04:00:05,810 - #14 x
INFO  04:00:05,810 - #35 ;
INFO  04:00:05,810 - #14 i
INFO  04:00:05,810 - #32 =
INFO  04:00:05,810 - #16 'i'
INFO  04:00:05,811 - #35 ;
INFO  04:00:05,811 - #14 niz
INFO  04:00:05,811 - #32 =
INFO  04:00:05,811 - #7 new
INFO  04:00:05,811 - #14 int
INFO  04:00:05,812 - #40 [
INFO  04:00:05,812 - #15 5
INFO  04:00:05,812 - #41 ]
INFO  04:00:05,813 - #35 ;
INFO  04:00:05,813 - #12 while
INFO  04:00:05,813 - #38 (
INFO  04:00:05,813 - #14 i
INFO  04:00:05,813 - #28 <
INFO  04:00:05,813 - #15 5
INFO  04:00:05,814 - #39 )
INFO  04:00:05,814 - #14 niz
INFO  04:00:05,814 - #40 [
INFO  04:00:05,814 - #14 i
INFO  04:00:05,814 - #41 ]
INFO  04:00:05,814 - #32 =
INFO  04:00:05,814 - #14 x
INFO  04:00:05,814 - #19 +
INFO  04:00:05,814 - #14 y
INFO  04:00:05,814 - #19 +
INFO  04:00:05,814 - #14 z
INFO  04:00:05,815 - #19 +
INFO  04:00:05,815 - #14 i
INFO  04:00:05,815 - #35 ;
INFO  04:00:05,815 - #14 i
INFO  04:00:05,815 - #33 ++
INFO  04:00:05,815 - #35 ;
INFO  04:00:05,815 - #43 }
INFO  04:00:05,815 - #43 }
INFO  04:00:05,816 - #43 }
INFO  04:00:05,816 - #3 class
INFO  04:00:05,816 - #14 Delta
INFO  04:00:05,816 - #42 {
INFO  04:00:05,816 - #42 {
INFO  04:00:05,816 - #14 bool
INFO  04:00:05,816 - #14 stampaj
INFO  04:00:05,816 - #38 (
INFO  04:00:05,816 - #39 )
INFO  04:00:05,817 - #42 {
INFO  04:00:05,817 - #8 print
INFO  04:00:05,817 - #38 (
INFO  04:00:05,817 - #18 "alfa"
INFO  04:00:05,817 - #19 +
INFO  04:00:05,817 - #18 "i"
INFO  04:00:05,817 - #19 +
INFO  04:00:05,817 - #18 "omega"
INFO  04:00:05,817 - #39 )
INFO  04:00:05,817 - #35 ;
INFO  04:00:05,818 - #43 }
INFO  04:00:05,818 - #43 }
INFO  04:00:05,818 - #43 }
INFO  04:00:05,818 - #42 {
INFO  04:00:05,818 - #11 void
INFO  04:00:05,818 - #14 main
INFO  04:00:05,818 - #38 (
INFO  04:00:05,818 - #39 )
INFO  04:00:05,818 - #14 Alfa
INFO  04:00:05,818 - #14 a1
INFO  04:00:05,818 - #36 ,
INFO  04:00:05,819 - #14 a2
INFO  04:00:05,819 - #35 ;
INFO  04:00:05,819 - #14 Beta
INFO  04:00:05,820 - #14 b
INFO  04:00:05,820 - #35 ;
INFO  04:00:05,820 - #14 Gama
INFO  04:00:05,821 - #14 g
INFO  04:00:05,821 - #35 ;
INFO  04:00:05,821 - #14 Delta
INFO  04:00:05,821 - #14 d
INFO  04:00:05,821 - #35 ;
INFO  04:00:05,821 - #42 {
INFO  04:00:05,821 - #14 a1
INFO  04:00:05,822 - #32 =
INFO  04:00:05,822 - #7 new
INFO  04:00:05,823 - #14 Alfa
INFO  04:00:05,823 - #35 ;
INFO  04:00:05,823 - #14 a2
INFO  04:00:05,824 - #32 =
INFO  04:00:05,824 - #7 new
INFO  04:00:05,824 - #14 Beta
INFO  04:00:05,825 - #35 ;
INFO  04:00:05,825 - #14 b
INFO  04:00:05,825 - #32 =
INFO  04:00:05,825 - #7 new
INFO  04:00:05,825 - #14 Alfa
INFO  04:00:05,825 - #35 ;
INFO  04:00:05,825 - #14 g
INFO  04:00:05,826 - #32 =
INFO  04:00:05,826 - #7 new
INFO  04:00:05,826 - #14 Gama
INFO  04:00:05,826 - #35 ;
INFO  04:00:05,827 - #14 d
INFO  04:00:05,827 - #32 =
INFO  04:00:05,827 - #7 new
INFO  04:00:05,827 - #14 Delta
INFO  04:00:05,827 - #35 ;
INFO  04:00:05,827 - #14 a1
INFO  04:00:05,827 - #37 .
INFO  04:00:05,827 - #14 dodaj
INFO  04:00:05,827 - #38 (
INFO  04:00:05,828 - #15 1
INFO  04:00:05,828 - #36 ,
INFO  04:00:05,828 - #14 str2
INFO  04:00:05,828 - #36 ,
INFO  04:00:05,828 - #15 3
INFO  04:00:05,828 - #39 )
INFO  04:00:05,828 - #35 ;
INFO  04:00:05,829 - #6 if
INFO  04:00:05,829 - #38 (
INFO  04:00:05,829 - #14 a1
INFO  04:00:05,829 - #24 ==
INFO  04:00:05,829 - #14 a2
INFO  04:00:05,829 - #39 )
INFO  04:00:05,829 - #8 print
INFO  04:00:05,830 - #38 (
INFO  04:00:05,830 - #18 "AlfaBeta"
INFO  04:00:05,830 - #39 )
INFO  04:00:05,830 - #35 ;
INFO  04:00:05,830 - #4 else
INFO  04:00:05,830 - #6 if
INFO  04:00:05,830 - #38 (
INFO  04:00:05,830 - #14 a1
INFO  04:00:05,831 - #26 >
INFO  04:00:05,831 - #14 a2
INFO  04:00:05,831 - #39 )
INFO  04:00:05,831 - #8 print
INFO  04:00:05,831 - #38 (
INFO  04:00:05,831 - #18 "true"
INFO  04:00:05,831 - #39 )
INFO  04:00:05,831 - #35 ;
INFO  04:00:05,831 - #4 else
INFO  04:00:05,832 - #6 if
INFO  04:00:05,832 - #38 (
INFO  04:00:05,832 - #14 g
INFO  04:00:05,832 - #25 !=
INFO  04:00:05,832 - #14 d
INFO  04:00:05,832 - #30 &&
INFO  04:00:05,832 - #14 g
INFO  04:00:05,832 - #25 !=
INFO  04:00:05,832 - #14 b
INFO  04:00:05,832 - #39 )
INFO  04:00:05,833 - #8 print
INFO  04:00:05,833 - #38 (
INFO  04:00:05,833 - #18 "false"
INFO  04:00:05,833 - #39 )
INFO  04:00:05,833 - #35 ;
INFO  04:00:05,833 - #43 }
INFO  04:00:05,833 - #43 }
INFO  04:00:05,833 - Compiling source file: B:\STUDIJE\CETVRTA GODINA\sedmi semestar\PP\projekat\workspace\MicrojavaCompiler\test\test10.mj
INFO  04:00:05,834 - #1 program
INFO  04:00:05,834 - #14 Program
INFO  04:00:05,835 - #3 class
INFO  04:00:05,835 - #14 A
INFO  04:00:05,835 - #42 {
INFO  04:00:05,835 - #14 int
INFO  04:00:05,835 - #14 x
INFO  04:00:05,835 - #40 [
INFO  04:00:05,835 - #41 ]
INFO  04:00:05,835 - #36 ,
INFO  04:00:05,835 - #14 y
INFO  04:00:05,835 - #40 [
INFO  04:00:05,836 - #41 ]
INFO  04:00:05,836 - #35 ;
INFO  04:00:05,836 - #42 {
INFO  04:00:05,836 - #14 int
INFO  04:00:05,836 - #14 pr
INFO  04:00:05,836 - #38 (
INFO  04:00:05,836 - #39 )
INFO  04:00:05,836 - #42 {
INFO  04:00:05,837 - #10 return
INFO  04:00:05,837 - #15 1
INFO  04:00:05,837 - #35 ;
INFO  04:00:05,837 - #43 }
INFO  04:00:05,837 - #14 int
INFO  04:00:05,837 - #14 pr
INFO  04:00:05,837 - #38 (
INFO  04:00:05,837 - #39 )
INFO  04:00:05,837 - #42 {
INFO  04:00:05,838 - #10 return
INFO  04:00:05,838 - #15 0
INFO  04:00:05,838 - #35 ;
INFO  04:00:05,838 - #43 }
INFO  04:00:05,838 - #14 int
INFO  04:00:05,838 - #14 pr1
INFO  04:00:05,838 - #38 (
INFO  04:00:05,839 - #39 )
INFO  04:00:05,839 - #42 {
INFO  04:00:05,839 - #10 return
INFO  04:00:05,839 - #14 pr
INFO  04:00:05,839 - #38 (
INFO  04:00:05,839 - #39 )
INFO  04:00:05,839 - #35 ;
INFO  04:00:05,840 - #43 }
INFO  04:00:05,840 - #43 }
INFO  04:00:05,840 - #43 }
INFO  04:00:05,840 - #5 const
INFO  04:00:05,840 - #14 int
INFO  04:00:05,840 - #14 pi
INFO  04:00:05,840 - #32 =
INFO  04:00:05,840 - #15 3
INFO  04:00:05,840 - #36 ,
INFO  04:00:05,841 - #14 e
INFO  04:00:05,841 - #32 =
INFO  04:00:05,841 - #15 2
INFO  04:00:05,841 - #35 ;
INFO  04:00:05,841 - #5 const
INFO  04:00:05,841 - #14 string
INFO  04:00:05,841 - #14 strin
INFO  04:00:05,841 - #32 =
INFO  04:00:05,841 - #18 "aaa"
INFO  04:00:05,842 - #35 ;
INFO  04:00:05,842 - #3 class
INFO  04:00:05,842 - #14 B
INFO  04:00:05,842 - #13 extends
INFO  04:00:05,842 - #14 A
INFO  04:00:05,842 - #42 {
INFO  04:00:05,842 - #14 int
INFO  04:00:05,842 - #14 i
INFO  04:00:05,842 - #35 ;
INFO  04:00:05,843 - #14 int
INFO  04:00:05,843 - #14 x
INFO  04:00:05,843 - #40 [
INFO  04:00:05,843 - #41 ]
INFO  04:00:05,843 - #35 ;
INFO  04:00:05,843 - #14 A
INFO  04:00:05,843 - #14 theAA
INFO  04:00:05,843 - #35 ;
INFO  04:00:05,844 - #42 {
INFO  04:00:05,844 - #11 void
INFO  04:00:05,844 - #14 voidtest
INFO  04:00:05,844 - #38 (
INFO  04:00:05,844 - #14 int
INFO  04:00:05,844 - #14 a
INFO  04:00:05,844 - #36 ,
INFO  04:00:05,844 - #14 char
INFO  04:00:05,844 - #14 b
INFO  04:00:05,844 - #39 )
INFO  04:00:05,845 - #14 int
INFO  04:00:05,845 - #14 c
INFO  04:00:05,845 - #35 ;
INFO  04:00:05,845 - #42 {
INFO  04:00:05,845 - #9 read
INFO  04:00:05,845 - #38 (
INFO  04:00:05,845 - #14 a
INFO  04:00:05,845 - #39 )
INFO  04:00:05,845 - #35 ;
INFO  04:00:05,845 - #9 read
INFO  04:00:05,845 - #38 (
INFO  04:00:05,846 - #14 b
INFO  04:00:05,846 - #39 )
INFO  04:00:05,846 - #35 ;
INFO  04:00:05,846 - #9 read
INFO  04:00:05,846 - #38 (
INFO  04:00:05,846 - #14 c
INFO  04:00:05,846 - #39 )
INFO  04:00:05,846 - #35 ;
INFO  04:00:05,847 - #43 }
INFO  04:00:05,847 - #14 int
INFO  04:00:05,847 - #14 met
INFO  04:00:05,847 - #38 (
INFO  04:00:05,847 - #14 int
INFO  04:00:05,847 - #14 a
INFO  04:00:05,847 - #39 )
INFO  04:00:05,848 - #42 {
INFO  04:00:05,848 - #10 return
INFO  04:00:05,848 - #14 a
INFO  04:00:05,848 - #19 +
INFO  04:00:05,848 - #15 1
INFO  04:00:05,848 - #35 ;
INFO  04:00:05,848 - #43 }
INFO  04:00:05,848 - #14 int
INFO  04:00:05,848 - #14 getValue
INFO  04:00:05,848 - #38 (
INFO  04:00:05,848 - #14 int
INFO  04:00:05,849 - #14 a
INFO  04:00:05,849 - #39 )
INFO  04:00:05,849 - #14 int
INFO  04:00:05,849 - #14 b
INFO  04:00:05,849 - #35 ;
INFO  04:00:05,849 - #14 bool
INFO  04:00:05,849 - #14 c
INFO  04:00:05,849 - #35 ;
INFO  04:00:05,849 - #42 {
INFO  04:00:05,849 - #14 this
INFO  04:00:05,850 - #37 .
INFO  04:00:05,850 - #14 i
INFO  04:00:05,850 - #32 =
INFO  04:00:05,850 - #15 6
INFO  04:00:05,850 - #35 ;
INFO  04:00:05,850 - #10 return
INFO  04:00:05,850 - #14 this
INFO  04:00:05,850 - #37 .
INFO  04:00:05,850 - #14 i
INFO  04:00:05,850 - #19 +
INFO  04:00:05,851 - #14 this
INFO  04:00:05,851 - #37 .
INFO  04:00:05,851 - #14 x
INFO  04:00:05,851 - #40 [
INFO  04:00:05,851 - #15 0
INFO  04:00:05,851 - #41 ]
INFO  04:00:05,851 - #19 +
INFO  04:00:05,851 - #14 this
INFO  04:00:05,851 - #37 .
INFO  04:00:05,851 - #14 met
INFO  04:00:05,851 - #38 (
INFO  04:00:05,852 - #14 a
INFO  04:00:05,852 - #39 )
INFO  04:00:05,852 - #35 ;
INFO  04:00:05,852 - #43 }
INFO  04:00:05,853 - #43 }
INFO  04:00:05,853 - #43 }
INFO  04:00:05,853 - #3 class
INFO  04:00:05,853 - #14 C
INFO  04:00:05,854 - #13 extends
INFO  04:00:05,854 - #14 B
INFO  04:00:05,854 - #42 {
INFO  04:00:05,854 - #14 A
INFO  04:00:05,854 - #14 theA
INFO  04:00:05,854 - #35 ;
INFO  04:00:05,855 - #14 string
INFO  04:00:05,855 - #14 a
INFO  04:00:05,855 - #32 =
INFO  04:00:05,855 - #18 "bas je roze i zut"
INFO  04:00:05,855 - #35 ;
INFO  04:00:05,856 - #42 {
INFO  04:00:05,856 - #11 void
INFO  04:00:05,856 - #14 glupost
INFO  04:00:05,857 - #38 (
INFO  04:00:05,857 - #14 int
INFO  04:00:05,857 - #36 ,
INFO  04:00:05,857 - #14 m
INFO  04:00:05,857 - #39 )
INFO  04:00:05,857 - #14 int
INFO  04:00:05,858 - #14 i
INFO  04:00:05,858 - #36 ,
INFO  04:00:05,858 - #14 bool
INFO  04:00:05,858 - #14 c
INFO  04:00:05,865 - #42 {
INFO  04:00:05,865 - #10 return
INFO  04:00:05,866 - #14 i
INFO  04:00:05,866 - #19 +
INFO  04:00:05,866 - #14 c
INFO  04:00:05,866 - #35 ;
INFO  04:00:05,866 - #43 }
INFO  04:00:05,866 - #43 }
INFO  04:00:05,867 - #43 }
INFO  04:00:05,867 - #3 class
INFO  04:00:05,867 - #14 E
INFO  04:00:05,868 - #13 extends
INFO  04:00:05,868 - #42 {
INFO  04:00:05,868 - #14 bool
INFO  04:00:05,868 - #14 b
INFO  04:00:05,868 - #35 ;
INFO  04:00:05,868 - #14 C
INFO  04:00:05,869 - #36 ,
INFO  04:00:05,869 - #14 cc
INFO  04:00:05,869 - #36 ,
INFO  04:00:05,870 - #14 char
INFO  04:00:05,871 - #14 e
INFO  04:00:05,871 - #35 ;
INFO  04:00:05,871 - #43 }
INFO  04:00:05,871 - #42 {
INFO  04:00:05,871 - #14 int
INFO  04:00:05,871 - #14 met
INFO  04:00:05,872 - #38 (
INFO  04:00:05,872 - #14 int
INFO  04:00:05,872 - #14 par
INFO  04:00:05,872 - #39 )
INFO  04:00:05,872 - #42 {
INFO  04:00:05,872 - #10 return
INFO  04:00:05,873 - #14 par
INFO  04:00:05,873 - #20 -
INFO  04:00:05,873 - #15 1
INFO  04:00:05,873 - #35 ;
INFO  04:00:05,874 - #43 }
INFO  04:00:05,874 - #14 string
INFO  04:00:05,874 - #14 strfunc
INFO  04:00:05,874 - #38 (
INFO  04:00:05,874 - #14 string
INFO  04:00:05,875 - #14 s
INFO  04:00:05,875 - #39 )
INFO  04:00:05,875 - #42 {
INFO  04:00:05,875 - #10 return
INFO  04:00:05,875 - #14 s
INFO  04:00:05,875 - #19 +
INFO  04:00:05,875 - #18 "aa"
INFO  04:00:05,875 - #35 ;
INFO  04:00:05,876 - #43 }
INFO  04:00:05,876 - #11 void
INFO  04:00:05,876 - #14 main
INFO  04:00:05,876 - #38 (
INFO  04:00:05,876 - #39 )
INFO  04:00:05,876 - #14 A
INFO  04:00:05,876 - #14 a
INFO  04:00:05,876 - #35 ;
INFO  04:00:05,876 - #14 B
INFO  04:00:05,877 - #14 b
INFO  04:00:05,877 - #35 ;
INFO  04:00:05,877 - #14 C
INFO  04:00:05,877 - #14 c
INFO  04:00:05,877 - #35 ;
INFO  04:00:05,877 - #14 int
INFO  04:00:05,877 - #14 i
INFO  04:00:05,877 - #36 ,
INFO  04:00:05,878 - #14 y
INFO  04:00:05,878 - #36 ,
INFO  04:00:05,878 - #14 z
INFO  04:00:05,878 - #35 ;
INFO  04:00:05,878 - #14 int
INFO  04:00:05,878 - #14 x
INFO  04:00:05,878 - #40 [
INFO  04:00:05,878 - #41 ]
INFO  04:00:05,878 - #35 ;
INFO  04:00:05,878 - #14 string
INFO  04:00:05,878 - #14 str1
INFO  04:00:05,879 - #36 ,
INFO  04:00:05,879 - #14 str2
INFO  04:00:05,879 - #35 ;
INFO  04:00:05,879 - #14 bool
INFO  04:00:05,879 - #14 bulin
INFO  04:00:05,879 - #35 ;
INFO  04:00:05,879 - #42 {
INFO  04:00:05,879 - #14 str2
INFO  04:00:05,879 - #32 =
INFO  04:00:05,879 - #18 "abcd"
INFO  04:00:05,879 - #35 ;
INFO  04:00:05,880 - #14 str1
INFO  04:00:05,880 - #32 =
INFO  04:00:05,880 - #18 "abc"
INFO  04:00:05,880 - #19 +
INFO  04:00:05,880 - #14 strfunc
INFO  04:00:05,880 - #38 (
INFO  04:00:05,880 - #14 str2
INFO  04:00:05,880 - #39 )
INFO  04:00:05,880 - #35 ;
INFO  04:00:05,880 - #14 str2
INFO  04:00:05,881 - #32 =
INFO  04:00:05,881 - #18 "mama"
INFO  04:00:05,881 - #19 +
INFO  04:00:05,881 - #18 "tata"
INFO  04:00:05,881 - #35 ;
INFO  04:00:05,881 - #14 strin
INFO  04:00:05,881 - #32 =
INFO  04:00:05,881 - #18 "ne moze se dodeliti vrednost konstantnom stringu"
INFO  04:00:05,881 - #35 ;
INFO  04:00:05,881 - #14 bulin
INFO  04:00:05,882 - #32 =
INFO  04:00:05,882 - #20 -
INFO  04:00:05,882 - #17 true
INFO  04:00:05,882 - #35 ;
INFO  04:00:05,882 - #8 print
INFO  04:00:05,882 - #38 (
INFO  04:00:05,882 - #14 bulin
INFO  04:00:05,882 - #39 )
INFO  04:00:05,882 - #35 ;
INFO  04:00:05,882 - #14 a
INFO  04:00:05,883 - #32 =
INFO  04:00:05,883 - #7 new
INFO  04:00:05,883 - #14 A
INFO  04:00:05,883 - #35 ;
INFO  04:00:05,883 - #14 a
INFO  04:00:05,883 - #37 .
INFO  04:00:05,883 - #14 x
INFO  04:00:05,883 - #32 =
INFO  04:00:05,883 - #7 new
INFO  04:00:05,883 - #14 int
INFO  04:00:05,883 - #40 [
INFO  04:00:05,884 - #15 5
INFO  04:00:05,884 - #41 ]
INFO  04:00:05,884 - #35 ;
INFO  04:00:05,884 - #14 a
INFO  04:00:05,884 - #37 .
INFO  04:00:05,884 - #14 y
INFO  04:00:05,884 - #32 =
INFO  04:00:05,884 - #7 new
INFO  04:00:05,885 - #14 int
INFO  04:00:05,885 - #40 [
INFO  04:00:05,885 - #15 5
INFO  04:00:05,885 - #41 ]
INFO  04:00:05,885 - #35 ;
INFO  04:00:05,885 - #14 c
INFO  04:00:05,885 - #32 =
INFO  04:00:05,885 - #7 new
INFO  04:00:05,885 - #14 C
INFO  04:00:05,887 - #35 ;
INFO  04:00:05,887 - #14 i
INFO  04:00:05,887 - #32 =
INFO  04:00:05,887 - #14 met
INFO  04:00:05,888 - #38 (
INFO  04:00:05,888 - #14 pi
INFO  04:00:05,888 - #19 +
INFO  04:00:05,888 - #15 3
INFO  04:00:05,888 - #39 )
INFO  04:00:05,888 - #19 +
INFO  04:00:05,888 - #14 e
INFO  04:00:05,888 - #21 *
INFO  04:00:05,888 - #15 2
INFO  04:00:05,888 - #35 ;
INFO  04:00:05,888 - #14 c
INFO  04:00:05,888 - #37 .
INFO  04:00:05,889 - #14 theA
INFO  04:00:05,889 - #32 =
INFO  04:00:05,889 - #14 a
INFO  04:00:05,889 - #35 ;
INFO  04:00:05,889 - #14 c
INFO  04:00:05,889 - #37 .
INFO  04:00:05,889 - #14 x
INFO  04:00:05,889 - #32 =
INFO  04:00:05,889 - #7 new
INFO  04:00:05,889 - #14 int
INFO  04:00:05,890 - #40 [
INFO  04:00:05,890 - #15 5
INFO  04:00:05,890 - #41 ]
INFO  04:00:05,890 - #35 ;
INFO  04:00:05,890 - #14 x
INFO  04:00:05,890 - #32 =
INFO  04:00:05,890 - #7 new
INFO  04:00:05,890 - #14 int
INFO  04:00:05,890 - #40 [
INFO  04:00:05,890 - #15 3
INFO  04:00:05,890 - #41 ]
INFO  04:00:05,891 - #35 ;
INFO  04:00:05,891 - #14 i
INFO  04:00:05,891 - #32 =
INFO  04:00:05,891 - #15 0
INFO  04:00:05,891 - #35 ;
INFO  04:00:05,891 - #9 read
INFO  04:00:05,891 - #38 (
INFO  04:00:05,891 - #14 c
INFO  04:00:05,891 - #37 .
INFO  04:00:05,891 - #14 i
INFO  04:00:05,891 - #39 )
INFO  04:00:05,891 - #35 ;
INFO  04:00:05,892 - #12 while
INFO  04:00:05,892 - #38 (
INFO  04:00:05,892 - #14 i
INFO  04:00:05,892 - #28 <
INFO  04:00:05,892 - #15 5
INFO  04:00:05,892 - #39 )
INFO  04:00:05,892 - #42 {
INFO  04:00:05,892 - #9 read
INFO  04:00:05,892 - #38 (
INFO  04:00:05,892 - #14 c
INFO  04:00:05,892 - #37 .
INFO  04:00:05,892 - #14 x
INFO  04:00:05,892 - #40 [
INFO  04:00:05,893 - #14 i
INFO  04:00:05,893 - #41 ]
INFO  04:00:05,893 - #39 )
INFO  04:00:05,893 - #35 ;
INFO  04:00:05,893 - #9 read
INFO  04:00:05,893 - #38 (
INFO  04:00:05,893 - #14 c
INFO  04:00:05,893 - #37 .
INFO  04:00:05,893 - #14 theA
INFO  04:00:05,894 - #37 .
INFO  04:00:05,894 - #14 x
INFO  04:00:05,894 - #40 [
INFO  04:00:05,894 - #14 i
INFO  04:00:05,894 - #41 ]
INFO  04:00:05,894 - #39 )
INFO  04:00:05,894 - #35 ;
INFO  04:00:05,894 - #14 i
INFO  04:00:05,894 - #33 ++
INFO  04:00:05,894 - #35 ;
INFO  04:00:05,894 - #43 }
INFO  04:00:05,894 - #8 print
INFO  04:00:05,895 - #38 (
INFO  04:00:05,895 - #14 c
INFO  04:00:05,895 - #37 .
INFO  04:00:05,895 - #14 getValue
INFO  04:00:05,895 - #38 (
INFO  04:00:05,895 - #14 c
INFO  04:00:05,895 - #37 .
INFO  04:00:05,895 - #14 theA
INFO  04:00:05,895 - #37 .
INFO  04:00:05,895 - #14 x
INFO  04:00:05,896 - #40 [
INFO  04:00:05,896 - #15 0
INFO  04:00:05,896 - #41 ]
INFO  04:00:05,896 - #39 )
INFO  04:00:05,896 - #39 )
INFO  04:00:05,896 - #35 ;
INFO  04:00:05,896 - #14 c
INFO  04:00:05,896 - #37 .
INFO  04:00:05,896 - #14 theA
INFO  04:00:05,896 - #37 .
INFO  04:00:05,896 - #14 x
INFO  04:00:05,896 - #40 [
INFO  04:00:05,897 - #15 0
INFO  04:00:05,897 - #41 ]
INFO  04:00:05,897 - #32 =
INFO  04:00:05,897 - #15 1
INFO  04:00:05,897 - #35 ;
INFO  04:00:05,897 - #6 if
INFO  04:00:05,897 - #38 (
INFO  04:00:05,897 - #14 i
INFO  04:00:05,897 - #24 ==
INFO  04:00:05,897 - #15 1
INFO  04:00:05,897 - #39 )
INFO  04:00:05,897 - #14 i
INFO  04:00:05,898 - #32 =
INFO  04:00:05,898 - #14 c
INFO  04:00:05,898 - #37 .
INFO  04:00:05,898 - #14 met
INFO  04:00:05,898 - #38 (
INFO  04:00:05,898 - #15 1
INFO  04:00:05,898 - #39 )
INFO  04:00:05,898 - #19 +
INFO  04:00:05,898 - #14 b
INFO  04:00:05,898 - #37 .
INFO  04:00:05,898 - #14 getValue
INFO  04:00:05,898 - #38 (
INFO  04:00:05,899 - #14 c
INFO  04:00:05,899 - #37 .
INFO  04:00:05,899 - #14 x
INFO  04:00:05,899 - #40 [
INFO  04:00:05,899 - #15 0
INFO  04:00:05,899 - #41 ]
INFO  04:00:05,899 - #39 )
INFO  04:00:05,899 - #19 +
INFO  04:00:05,899 - #15 5
INFO  04:00:05,900 - #21 *
INFO  04:00:05,900 - #15 8
INFO  04:00:05,900 - #35 ;
INFO  04:00:05,900 - #14 b
INFO  04:00:05,900 - #37 .
INFO  04:00:05,900 - #14 getValue
INFO  04:00:05,900 - #38 (
INFO  04:00:05,900 - #14 b
INFO  04:00:05,900 - #37 .
INFO  04:00:05,900 - #14 y
INFO  04:00:05,900 - #40 [
INFO  04:00:05,900 - #14 i
INFO  04:00:05,900 - #41 ]
INFO  04:00:05,901 - #39 )
INFO  04:00:05,901 - #35 ;
INFO  04:00:05,901 - #14 b
INFO  04:00:05,901 - #37 .
INFO  04:00:05,901 - #14 pr
INFO  04:00:05,901 - #38 (
INFO  04:00:05,901 - #39 )
INFO  04:00:05,901 - #35 ;
INFO  04:00:05,901 - #14 i
INFO  04:00:05,901 - #32 =
INFO  04:00:05,901 - #15 4
INFO  04:00:05,901 - #21 *
INFO  04:00:05,902 - #38 (
INFO  04:00:05,902 - #15 5
INFO  04:00:05,902 - #19 +
INFO  04:00:05,902 - #15 6
INFO  04:00:05,902 - #19 +
INFO  04:00:05,902 - #14 i
INFO  04:00:05,903 - #39 )
INFO  04:00:05,903 - #19 +
INFO  04:00:05,903 - #14 i
INFO  04:00:05,903 - #19 +
INFO  04:00:05,903 - #14 met
INFO  04:00:05,903 - #38 (
INFO  04:00:05,904 - #15 2
INFO  04:00:05,904 - #39 )
INFO  04:00:05,904 - #35 ;
INFO  04:00:05,904 - #14 chr
INFO  04:00:05,904 - #38 (
INFO  04:00:05,904 - #15 1
INFO  04:00:05,904 - #39 )
INFO  04:00:05,904 - #35 ;
INFO  04:00:05,904 - #14 i
INFO  04:00:05,904 - #32 =
INFO  04:00:05,904 - #14 ord
INFO  04:00:05,904 - #38 (
INFO  04:00:05,905 - #15 1
INFO  04:00:05,905 - #39 )
INFO  04:00:05,905 - #35 ;
INFO  04:00:05,905 - #8 print
INFO  04:00:05,905 - #38 (
INFO  04:00:05,905 - #15 4
INFO  04:00:05,905 - #36 ,
INFO  04:00:05,905 - #15 1
INFO  04:00:05,905 - #39 )
INFO  04:00:05,905 - #35 ;
INFO  04:00:05,906 - #14 a
INFO  04:00:05,906 - #32 =
INFO  04:00:05,906 - #14 b
INFO  04:00:05,906 - #35 ;
INFO  04:00:05,906 - #6 if
INFO  04:00:05,906 - #38 (
INFO  04:00:05,906 - #17 true
INFO  04:00:05,906 - #39 )
INFO  04:00:05,906 - #14 i
INFO  04:00:05,906 - #33 ++
INFO  04:00:05,906 - #35 ;
INFO  04:00:05,907 - #12 while
INFO  04:00:05,907 - #38 (
INFO  04:00:05,907 - #14 str2
INFO  04:00:05,907 - #24 ==
INFO  04:00:05,907 - #18 "kraj"
INFO  04:00:05,907 - #31 ||
INFO  04:00:05,907 - #14 str1
INFO  04:00:05,907 - #24 ==
INFO  04:00:05,907 - #18 "kraj"
INFO  04:00:05,907 - #39 )
INFO  04:00:05,907 - #42 {
INFO  04:00:05,907 - #14 c
INFO  04:00:05,908 - #37 .
INFO  04:00:05,908 - #14 theA
INFO  04:00:05,908 - #37 .
INFO  04:00:05,908 - #14 x
INFO  04:00:05,908 - #40 [
INFO  04:00:05,908 - #14 i
INFO  04:00:05,908 - #41 ]
INFO  04:00:05,908 - #32 =
INFO  04:00:05,908 - #14 a
INFO  04:00:05,908 - #37 .
INFO  04:00:05,908 - #14 x
INFO  04:00:05,908 - #40 [
INFO  04:00:05,909 - #14 i
INFO  04:00:05,909 - #41 ]
INFO  04:00:05,909 - #35 ;
INFO  04:00:05,909 - #6 if
INFO  04:00:05,909 - #38 (
INFO  04:00:05,909 - #14 b
INFO  04:00:05,909 - #37 .
INFO  04:00:05,909 - #14 theAA
INFO  04:00:05,909 - #37 .
INFO  04:00:05,909 - #14 y
INFO  04:00:05,909 - #40 [
INFO  04:00:05,909 - #14 i
INFO  04:00:05,910 - #41 ]
INFO  04:00:05,910 - #24 ==
INFO  04:00:05,910 - #14 c
INFO  04:00:05,910 - #37 .
INFO  04:00:05,910 - #14 theA
INFO  04:00:05,910 - #37 .
INFO  04:00:05,910 - #14 x
INFO  04:00:05,910 - #40 [
INFO  04:00:05,910 - #14 i
INFO  04:00:05,910 - #41 ]
INFO  04:00:05,910 - #30 &&
INFO  04:00:05,911 - #14 c
INFO  04:00:05,911 - #37 .
INFO  04:00:05,911 - #14 pr1
INFO  04:00:05,911 - #38 (
INFO  04:00:05,911 - #39 )
INFO  04:00:05,911 - #39 )
INFO  04:00:05,911 - #2 break
INFO  04:00:05,911 - #35 ;
INFO  04:00:05,911 - #9 read
INFO  04:00:05,911 - #38 (
INFO  04:00:05,911 - #14 str1
INFO  04:00:05,912 - #39 )
INFO  04:00:05,912 - #35 ;
INFO  04:00:05,912 - #9 read
INFO  04:00:05,912 - #38 (
INFO  04:00:05,912 - #14 str2
INFO  04:00:05,912 - #39 )
INFO  04:00:05,912 - #35 ;
INFO  04:00:05,912 - #43 }
INFO  04:00:05,912 - #43 }
INFO  04:00:05,912 - #43 }
